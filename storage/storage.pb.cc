// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage/storage.proto

#include "storage/storage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace grpc_services {
namespace storage {
class GetDriveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDriveRequest>
      _instance;
} _GetDriveRequest_default_instance_;
class GetDriveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDriveResponse>
      _instance;
} _GetDriveResponse_default_instance_;
class GetDrivesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDrivesRequest>
      _instance;
} _GetDrivesRequest_default_instance_;
class GetDrivesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetDrivesResponse>
      _instance;
} _GetDrivesResponse_default_instance_;
class GetItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetItemRequest>
      _instance;
} _GetItemRequest_default_instance_;
class GetItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetItemResponse>
      _instance;
} _GetItemResponse_default_instance_;
class GetChildrenRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetChildrenRequest>
      _instance;
} _GetChildrenRequest_default_instance_;
class GetChildrenResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetChildrenResponse>
      _instance;
} _GetChildrenResponse_default_instance_;
class GetContentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetContentRequest>
      _instance;
} _GetContentRequest_default_instance_;
class GetContentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetContentResponse>
      _instance;
} _GetContentResponse_default_instance_;
class GetContentStreamRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetContentStreamRequest>
      _instance;
} _GetContentStreamRequest_default_instance_;
class GetContentStreamResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetContentStreamResponse>
      _instance;
} _GetContentStreamResponse_default_instance_;
class CreateDriveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDriveRequest>
      _instance;
} _CreateDriveRequest_default_instance_;
class CreateDriveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateDriveResponse>
      _instance;
} _CreateDriveResponse_default_instance_;
class CreateItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateItemRequest>
      _instance;
} _CreateItemRequest_default_instance_;
class CreateItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateItemResponse>
      _instance;
} _CreateItemResponse_default_instance_;
class PutContentStreamRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutContentStreamRequest>
      _instance;
} _PutContentStreamRequest_default_instance_;
class PutContentStreamResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutContentStreamResponse>
      _instance;
} _PutContentStreamResponse_default_instance_;
class TruncateContentRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TruncateContentRequest>
      _instance;
} _TruncateContentRequest_default_instance_;
class TruncateContentResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TruncateContentResponse>
      _instance;
} _TruncateContentResponse_default_instance_;
class UpdateDriveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDriveRequest>
      _instance;
} _UpdateDriveRequest_default_instance_;
class UpdateDriveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateDriveResponse>
      _instance;
} _UpdateDriveResponse_default_instance_;
class UpdateItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateItemRequest>
      _instance;
} _UpdateItemRequest_default_instance_;
class UpdateItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateItemResponse>
      _instance;
} _UpdateItemResponse_default_instance_;
class RemoveDriveRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveDriveRequest>
      _instance;
} _RemoveDriveRequest_default_instance_;
class RemoveDriveResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveDriveResponse>
      _instance;
} _RemoveDriveResponse_default_instance_;
class RemoveItemRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveItemRequest>
      _instance;
} _RemoveItemRequest_default_instance_;
class RemoveItemResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoveItemResponse>
      _instance;
} _RemoveItemResponse_default_instance_;
class WatchChangesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchChangesRequest>
      _instance;
} _WatchChangesRequest_default_instance_;
class WatchChangesResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WatchChangesResponse>
      _instance;
  const ::grpc_services::storage::ItemCreatedEvent* created_;
  const ::grpc_services::storage::ItemRemovedEvent* removed_;
  const ::grpc_services::storage::ItemContentUpdatedEvent* updated_;
} _WatchChangesResponse_default_instance_;
}  // namespace storage
}  // namespace grpc_services
namespace protobuf_storage_2fstorage_2eproto {
void InitDefaultsGetDriveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetDriveRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetDriveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetDriveRequest::InitAsDefaultInstance();
}

void InitDefaultsGetDriveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDriveRequestImpl);
}

void InitDefaultsGetDriveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  {
    void* ptr = &::grpc_services::storage::_GetDriveResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetDriveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetDriveResponse::InitAsDefaultInstance();
}

void InitDefaultsGetDriveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDriveResponseImpl);
}

void InitDefaultsGetDrivesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetDrivesRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetDrivesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetDrivesRequest::InitAsDefaultInstance();
}

void InitDefaultsGetDrivesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDrivesRequestImpl);
}

void InitDefaultsGetDrivesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  {
    void* ptr = &::grpc_services::storage::_GetDrivesResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetDrivesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetDrivesResponse::InitAsDefaultInstance();
}

void InitDefaultsGetDrivesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetDrivesResponseImpl);
}

void InitDefaultsGetItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetItemRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetItemRequest::InitAsDefaultInstance();
}

void InitDefaultsGetItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetItemRequestImpl);
}

void InitDefaultsGetItemResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_GetItemResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetItemResponse::InitAsDefaultInstance();
}

void InitDefaultsGetItemResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetItemResponseImpl);
}

void InitDefaultsGetChildrenRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetChildrenRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetChildrenRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetChildrenRequest::InitAsDefaultInstance();
}

void InitDefaultsGetChildrenRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetChildrenRequestImpl);
}

void InitDefaultsGetChildrenResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_GetChildrenResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetChildrenResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetChildrenResponse::InitAsDefaultInstance();
}

void InitDefaultsGetChildrenResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetChildrenResponseImpl);
}

void InitDefaultsGetContentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetContentRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetContentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetContentRequest::InitAsDefaultInstance();
}

void InitDefaultsGetContentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetContentRequestImpl);
}

void InitDefaultsGetContentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetContentResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetContentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetContentResponse::InitAsDefaultInstance();
}

void InitDefaultsGetContentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetContentResponseImpl);
}

void InitDefaultsGetContentStreamRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetContentStreamRequest_default_instance_;
    new (ptr) ::grpc_services::storage::GetContentStreamRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetContentStreamRequest::InitAsDefaultInstance();
}

void InitDefaultsGetContentStreamRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetContentStreamRequestImpl);
}

void InitDefaultsGetContentStreamResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_GetContentStreamResponse_default_instance_;
    new (ptr) ::grpc_services::storage::GetContentStreamResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::GetContentStreamResponse::InitAsDefaultInstance();
}

void InitDefaultsGetContentStreamResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGetContentStreamResponseImpl);
}

void InitDefaultsCreateDriveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_CreateDriveRequest_default_instance_;
    new (ptr) ::grpc_services::storage::CreateDriveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::CreateDriveRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateDriveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateDriveRequestImpl);
}

void InitDefaultsCreateDriveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  {
    void* ptr = &::grpc_services::storage::_CreateDriveResponse_default_instance_;
    new (ptr) ::grpc_services::storage::CreateDriveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::CreateDriveResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateDriveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateDriveResponseImpl);
}

void InitDefaultsCreateItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_CreateItemRequest_default_instance_;
    new (ptr) ::grpc_services::storage::CreateItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::CreateItemRequest::InitAsDefaultInstance();
}

void InitDefaultsCreateItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateItemRequestImpl);
}

void InitDefaultsCreateItemResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_CreateItemResponse_default_instance_;
    new (ptr) ::grpc_services::storage::CreateItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::CreateItemResponse::InitAsDefaultInstance();
}

void InitDefaultsCreateItemResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCreateItemResponseImpl);
}

void InitDefaultsPutContentStreamRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_PutContentStreamRequest_default_instance_;
    new (ptr) ::grpc_services::storage::PutContentStreamRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::PutContentStreamRequest::InitAsDefaultInstance();
}

void InitDefaultsPutContentStreamRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutContentStreamRequestImpl);
}

void InitDefaultsPutContentStreamResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_PutContentStreamResponse_default_instance_;
    new (ptr) ::grpc_services::storage::PutContentStreamResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::PutContentStreamResponse::InitAsDefaultInstance();
}

void InitDefaultsPutContentStreamResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutContentStreamResponseImpl);
}

void InitDefaultsTruncateContentRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_TruncateContentRequest_default_instance_;
    new (ptr) ::grpc_services::storage::TruncateContentRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::TruncateContentRequest::InitAsDefaultInstance();
}

void InitDefaultsTruncateContentRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTruncateContentRequestImpl);
}

void InitDefaultsTruncateContentResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_TruncateContentResponse_default_instance_;
    new (ptr) ::grpc_services::storage::TruncateContentResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::TruncateContentResponse::InitAsDefaultInstance();
}

void InitDefaultsTruncateContentResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTruncateContentResponseImpl);
}

void InitDefaultsUpdateDriveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  {
    void* ptr = &::grpc_services::storage::_UpdateDriveRequest_default_instance_;
    new (ptr) ::grpc_services::storage::UpdateDriveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::UpdateDriveRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateDriveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateDriveRequestImpl);
}

void InitDefaultsUpdateDriveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  {
    void* ptr = &::grpc_services::storage::_UpdateDriveResponse_default_instance_;
    new (ptr) ::grpc_services::storage::UpdateDriveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::UpdateDriveResponse::InitAsDefaultInstance();
}

void InitDefaultsUpdateDriveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateDriveResponseImpl);
}

void InitDefaultsUpdateItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_UpdateItemRequest_default_instance_;
    new (ptr) ::grpc_services::storage::UpdateItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::UpdateItemRequest::InitAsDefaultInstance();
}

void InitDefaultsUpdateItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateItemRequestImpl);
}

void InitDefaultsUpdateItemResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_UpdateItemResponse_default_instance_;
    new (ptr) ::grpc_services::storage::UpdateItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::UpdateItemResponse::InitAsDefaultInstance();
}

void InitDefaultsUpdateItemResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUpdateItemResponseImpl);
}

void InitDefaultsRemoveDriveRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_RemoveDriveRequest_default_instance_;
    new (ptr) ::grpc_services::storage::RemoveDriveRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::RemoveDriveRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveDriveRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveDriveRequestImpl);
}

void InitDefaultsRemoveDriveResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_RemoveDriveResponse_default_instance_;
    new (ptr) ::grpc_services::storage::RemoveDriveResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::RemoveDriveResponse::InitAsDefaultInstance();
}

void InitDefaultsRemoveDriveResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveDriveResponseImpl);
}

void InitDefaultsRemoveItemRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_RemoveItemRequest_default_instance_;
    new (ptr) ::grpc_services::storage::RemoveItemRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::RemoveItemRequest::InitAsDefaultInstance();
}

void InitDefaultsRemoveItemRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveItemRequestImpl);
}

void InitDefaultsRemoveItemResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_RemoveItemResponse_default_instance_;
    new (ptr) ::grpc_services::storage::RemoveItemResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::RemoveItemResponse::InitAsDefaultInstance();
}

void InitDefaultsRemoveItemResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoveItemResponseImpl);
}

void InitDefaultsWatchChangesRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_WatchChangesRequest_default_instance_;
    new (ptr) ::grpc_services::storage::WatchChangesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::WatchChangesRequest::InitAsDefaultInstance();
}

void InitDefaultsWatchChangesRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchChangesRequestImpl);
}

void InitDefaultsWatchChangesResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItemCreatedEvent();
  protobuf_storage_2fentities_2eproto::InitDefaultsItemRemovedEvent();
  protobuf_storage_2fentities_2eproto::InitDefaultsItemContentUpdatedEvent();
  {
    void* ptr = &::grpc_services::storage::_WatchChangesResponse_default_instance_;
    new (ptr) ::grpc_services::storage::WatchChangesResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::WatchChangesResponse::InitAsDefaultInstance();
}

void InitDefaultsWatchChangesResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWatchChangesResponseImpl);
}

::google::protobuf::Metadata file_level_metadata[30];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDriveRequest, drive_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDriveResponse, drive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDrivesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDrivesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetDrivesResponse, drives_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetItemRequest, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetItemResponse, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenRequest, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetChildrenResponse, children_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentRequest, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, total_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentResponse, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamRequest, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, total_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::GetContentStreamResponse, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateDriveRequest, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateDriveResponse, drive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemRequest, parent_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::CreateItemResponse, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamRequest, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::PutContentStreamResponse, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentRequest, new_length_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::TruncateContentResponse, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateDriveRequest, drive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateDriveResponse, drive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateItemRequest, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::UpdateItemResponse, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveDriveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveDriveRequest, drive_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveDriveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, drive_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveItemRequest, item_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::RemoveItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::WatchChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::WatchChangesRequest, drive_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::grpc_services::storage::WatchChangesResponseDefaultTypeInternal, created_),
  offsetof(::grpc_services::storage::WatchChangesResponseDefaultTypeInternal, removed_),
  offsetof(::grpc_services::storage::WatchChangesResponseDefaultTypeInternal, updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::WatchChangesResponse, test_event_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc_services::storage::GetDriveRequest)},
  { 6, -1, sizeof(::grpc_services::storage::GetDriveResponse)},
  { 12, -1, sizeof(::grpc_services::storage::GetDrivesRequest)},
  { 17, -1, sizeof(::grpc_services::storage::GetDrivesResponse)},
  { 23, -1, sizeof(::grpc_services::storage::GetItemRequest)},
  { 30, -1, sizeof(::grpc_services::storage::GetItemResponse)},
  { 36, -1, sizeof(::grpc_services::storage::GetChildrenRequest)},
  { 45, -1, sizeof(::grpc_services::storage::GetChildrenResponse)},
  { 53, -1, sizeof(::grpc_services::storage::GetContentRequest)},
  { 62, -1, sizeof(::grpc_services::storage::GetContentResponse)},
  { 71, -1, sizeof(::grpc_services::storage::GetContentStreamRequest)},
  { 80, -1, sizeof(::grpc_services::storage::GetContentStreamResponse)},
  { 89, -1, sizeof(::grpc_services::storage::CreateDriveRequest)},
  { 96, -1, sizeof(::grpc_services::storage::CreateDriveResponse)},
  { 102, -1, sizeof(::grpc_services::storage::CreateItemRequest)},
  { 111, -1, sizeof(::grpc_services::storage::CreateItemResponse)},
  { 117, -1, sizeof(::grpc_services::storage::PutContentStreamRequest)},
  { 126, -1, sizeof(::grpc_services::storage::PutContentStreamResponse)},
  { 132, -1, sizeof(::grpc_services::storage::TruncateContentRequest)},
  { 140, -1, sizeof(::grpc_services::storage::TruncateContentResponse)},
  { 146, -1, sizeof(::grpc_services::storage::UpdateDriveRequest)},
  { 152, -1, sizeof(::grpc_services::storage::UpdateDriveResponse)},
  { 158, -1, sizeof(::grpc_services::storage::UpdateItemRequest)},
  { 164, -1, sizeof(::grpc_services::storage::UpdateItemResponse)},
  { 170, -1, sizeof(::grpc_services::storage::RemoveDriveRequest)},
  { 176, -1, sizeof(::grpc_services::storage::RemoveDriveResponse)},
  { 181, -1, sizeof(::grpc_services::storage::RemoveItemRequest)},
  { 188, -1, sizeof(::grpc_services::storage::RemoveItemResponse)},
  { 193, -1, sizeof(::grpc_services::storage::WatchChangesRequest)},
  { 199, -1, sizeof(::grpc_services::storage::WatchChangesResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetDriveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetDriveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetDrivesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetDrivesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetChildrenRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetChildrenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetContentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetContentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetContentStreamRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_GetContentStreamResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_CreateDriveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_CreateDriveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_CreateItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_CreateItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_PutContentStreamRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_PutContentStreamResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_TruncateContentRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_TruncateContentResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_UpdateDriveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_UpdateDriveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_UpdateItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_UpdateItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_RemoveDriveRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_RemoveDriveResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_RemoveItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_RemoveItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_WatchChangesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_WatchChangesResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "storage/storage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\025storage/storage.proto\022\025grpc_services.s"
      "torage\032\026storage/entities.proto\"#\n\017GetDri"
      "veRequest\022\020\n\010drive_id\030\001 \001(\t\"\?\n\020GetDriveR"
      "esponse\022+\n\005drive\030\001 \001(\0132\034.grpc_services.s"
      "torage.Drive\"\022\n\020GetDrivesRequest\"A\n\021GetD"
      "rivesResponse\022,\n\006drives\030\001 \003(\0132\034.grpc_ser"
      "vices.storage.Drive\"3\n\016GetItemRequest\022\020\n"
      "\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\"<\n\017GetI"
      "temResponse\022)\n\004item\030\001 \001(\0132\033.grpc_service"
      "s.storage.Item\"V\n\022GetChildrenRequest\022\020\n\010"
      "drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006offse"
      "t\030\003 \001(\004\022\r\n\005count\030\004 \001(\004\"c\n\023GetChildrenRes"
      "ponse\022\016\n\006offset\030\001 \001(\004\022\r\n\005total\030\002 \001(\004\022-\n\010"
      "children\030\003 \003(\0132\033.grpc_services.storage.I"
      "tem\"U\n\021GetContentRequest\022\020\n\010drive_id\030\001 \001"
      "(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\r\n\005c"
      "ount\030\004 \001(\004\"X\n\022GetContentResponse\022\016\n\006offs"
      "et\030\001 \001(\004\022\r\n\005count\030\002 \001(\004\022\022\n\ntotal_size\030\003 "
      "\001(\004\022\017\n\007content\030\004 \001(\014\"[\n\027GetContentStream"
      "Request\022\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001"
      "(\t\022\016\n\006offset\030\003 \001(\004\022\r\n\005count\030\004 \001(\004\"^\n\030Get"
      "ContentStreamResponse\022\016\n\006offset\030\001 \001(\004\022\r\n"
      "\005count\030\002 \001(\004\022\022\n\ntotal_size\030\003 \001(\004\022\017\n\007cont"
      "ent\030\004 \001(\014\"7\n\022CreateDriveRequest\022\014\n\004name\030"
      "\001 \001(\t\022\023\n\013description\030\002 \001(\t\"B\n\023CreateDriv"
      "eResponse\022+\n\005drive\030\001 \001(\0132\034.grpc_services"
      ".storage.Drive\"[\n\021CreateItemRequest\022\020\n\010d"
      "rive_id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013descripti"
      "on\030\003 \001(\t\022\021\n\tparent_id\030\004 \001(\t\"\?\n\022CreateIte"
      "mResponse\022)\n\004item\030\001 \001(\0132\033.grpc_services."
      "storage.Item\"]\n\027PutContentStreamRequest\022"
      "\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022\016\n\006of"
      "fset\030\003 \001(\004\022\017\n\007content\030\004 \001(\014\"E\n\030PutConten"
      "tStreamResponse\022)\n\004item\030\001 \001(\0132\033.grpc_ser"
      "vices.storage.Item\"O\n\026TruncateContentReq"
      "uest\022\020\n\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\022"
      "\022\n\nnew_length\030\003 \001(\004\"D\n\027TruncateContentRe"
      "sponse\022)\n\004item\030\001 \001(\0132\033.grpc_services.sto"
      "rage.Item\"A\n\022UpdateDriveRequest\022+\n\005drive"
      "\030\001 \001(\0132\034.grpc_services.storage.Drive\"B\n\023"
      "UpdateDriveResponse\022+\n\005drive\030\001 \001(\0132\034.grp"
      "c_services.storage.Drive\">\n\021UpdateItemRe"
      "quest\022)\n\004item\030\001 \001(\0132\033.grpc_services.stor"
      "age.Item\"\?\n\022UpdateItemResponse\022)\n\004item\030\001"
      " \001(\0132\033.grpc_services.storage.Item\"&\n\022Rem"
      "oveDriveRequest\022\020\n\010drive_id\030\001 \001(\t\"\025\n\023Rem"
      "oveDriveResponse\"6\n\021RemoveItemRequest\022\020\n"
      "\010drive_id\030\001 \001(\t\022\017\n\007item_id\030\002 \001(\t\"\024\n\022Remo"
      "veItemResponse\"\'\n\023WatchChangesRequest\022\020\n"
      "\010drive_id\030\001 \001(\t\"\337\001\n\024WatchChangesResponse"
      "\022:\n\007created\030\001 \001(\0132\'.grpc_services.storag"
      "e.ItemCreatedEventH\000\022:\n\007removed\030\002 \001(\0132\'."
      "grpc_services.storage.ItemRemovedEventH\000"
      "\022A\n\007updated\030\003 \001(\0132..grpc_services.storag"
      "e.ItemContentUpdatedEventH\000B\014\n\ntest_even"
      "t2\226\014\n\016StorageService\022[\n\010GetDrive\022&.grpc_"
      "services.storage.GetDriveRequest\032\'.grpc_"
      "services.storage.GetDriveResponse\022^\n\tGet"
      "Drives\022\'.grpc_services.storage.GetDrives"
      "Request\032(.grpc_services.storage.GetDrive"
      "sResponse\022X\n\007GetItem\022%.grpc_services.sto"
      "rage.GetItemRequest\032&.grpc_services.stor"
      "age.GetItemResponse\022d\n\013GetChildren\022).grp"
      "c_services.storage.GetChildrenRequest\032*."
      "grpc_services.storage.GetChildrenRespons"
      "e\022a\n\nGetContent\022(.grpc_services.storage."
      "GetContentRequest\032).grpc_services.storag"
      "e.GetContentResponse\022u\n\020GetContentStream"
      "\022..grpc_services.storage.GetContentStrea"
      "mRequest\032/.grpc_services.storage.GetCont"
      "entStreamResponse0\001\022d\n\013CreateDrive\022).grp"
      "c_services.storage.CreateDriveRequest\032*."
      "grpc_services.storage.CreateDriveRespons"
      "e\022a\n\nCreateItem\022(.grpc_services.storage."
      "CreateItemRequest\032).grpc_services.storag"
      "e.CreateItemResponse\022u\n\020PutContentStream"
      "\022..grpc_services.storage.PutContentStrea"
      "mRequest\032/.grpc_services.storage.PutCont"
      "entStreamResponse(\001\022p\n\017TruncateContent\022-"
      ".grpc_services.storage.TruncateContentRe"
      "quest\032..grpc_services.storage.TruncateCo"
      "ntentResponse\022d\n\013UpdateDrive\022).grpc_serv"
      "ices.storage.UpdateDriveRequest\032*.grpc_s"
      "ervices.storage.UpdateDriveResponse\022a\n\nU"
      "pdateItem\022(.grpc_services.storage.Update"
      "ItemRequest\032).grpc_services.storage.Upda"
      "teItemResponse\022d\n\013RemoveDrive\022).grpc_ser"
      "vices.storage.RemoveDriveRequest\032*.grpc_"
      "services.storage.RemoveDriveResponse\022a\n\n"
      "RemoveItem\022(.grpc_services.storage.Remov"
      "eItemRequest\032).grpc_services.storage.Rem"
      "oveItemResponse\022i\n\014WatchChanges\022*.grpc_s"
      "ervices.storage.WatchChangesRequest\032+.gr"
      "pc_services.storage.WatchChangesResponse"
      "0\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3770);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storage/storage.proto", &protobuf_RegisterTypes);
  ::protobuf_storage_2fentities_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_storage_2fstorage_2eproto
namespace grpc_services {
namespace storage {

// ===================================================================

void GetDriveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDriveRequest::kDriveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDriveRequest::GetDriveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDriveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetDriveRequest)
}
GetDriveRequest::GetDriveRequest(const GetDriveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDriveRequest)
}

void GetDriveRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetDriveRequest::~GetDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDriveRequest)
  SharedDtor();
}

void GetDriveRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetDriveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDriveRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDriveRequest& GetDriveRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDriveRequest();
  return *internal_default_instance();
}

GetDriveRequest* GetDriveRequest::New(::google::protobuf::Arena* arena) const {
  GetDriveRequest* n = new GetDriveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetDriveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetDriveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetDriveRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetDriveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetDriveRequest)
  return false;
#undef DO_
}

void GetDriveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetDriveRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetDriveRequest)
}

::google::protobuf::uint8* GetDriveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetDriveRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDriveRequest)
  return target;
}

size_t GetDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDriveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDriveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDriveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDriveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetDriveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetDriveRequest)
    MergeFrom(*source);
  }
}

void GetDriveRequest::MergeFrom(const GetDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
}

void GetDriveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDriveRequest::CopyFrom(const GetDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriveRequest::IsInitialized() const {
  return true;
}

void GetDriveRequest::Swap(GetDriveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDriveRequest::InternalSwap(GetDriveRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDriveRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDriveResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_GetDriveResponse_default_instance_._instance.get_mutable()->drive_ = const_cast< ::grpc_services::storage::Drive*>(
      ::grpc_services::storage::Drive::internal_default_instance());
}
void GetDriveResponse::clear_drive() {
  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDriveResponse::kDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDriveResponse::GetDriveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDriveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetDriveResponse)
}
GetDriveResponse::GetDriveResponse(const GetDriveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDriveResponse)
}

void GetDriveResponse::SharedCtor() {
  drive_ = NULL;
  _cached_size_ = 0;
}

GetDriveResponse::~GetDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDriveResponse)
  SharedDtor();
}

void GetDriveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete drive_;
}

void GetDriveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDriveResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDriveResponse& GetDriveResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDriveResponse();
  return *internal_default_instance();
}

GetDriveResponse* GetDriveResponse::New(::google::protobuf::Arena* arena) const {
  GetDriveResponse* n = new GetDriveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
  _internal_metadata_.Clear();
}

bool GetDriveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetDriveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Drive drive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetDriveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetDriveResponse)
  return false;
#undef DO_
}

void GetDriveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->drive_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetDriveResponse)
}

::google::protobuf::uint8* GetDriveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->drive_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDriveResponse)
  return target;
}

size_t GetDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDriveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->drive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDriveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDriveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDriveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetDriveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetDriveResponse)
    MergeFrom(*source);
  }
}

void GetDriveResponse::MergeFrom(const GetDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_drive()) {
    mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from.drive());
  }
}

void GetDriveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDriveResponse::CopyFrom(const GetDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDriveResponse::IsInitialized() const {
  return true;
}

void GetDriveResponse::Swap(GetDriveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDriveResponse::InternalSwap(GetDriveResponse* other) {
  using std::swap;
  swap(drive_, other->drive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDriveResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDrivesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDrivesRequest::GetDrivesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDrivesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetDrivesRequest)
}
GetDrivesRequest::GetDrivesRequest(const GetDrivesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDrivesRequest)
}

void GetDrivesRequest::SharedCtor() {
  _cached_size_ = 0;
}

GetDrivesRequest::~GetDrivesRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDrivesRequest)
  SharedDtor();
}

void GetDrivesRequest::SharedDtor() {
}

void GetDrivesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDrivesRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDrivesRequest& GetDrivesRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDrivesRequest();
  return *internal_default_instance();
}

GetDrivesRequest* GetDrivesRequest::New(::google::protobuf::Arena* arena) const {
  GetDrivesRequest* n = new GetDrivesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDrivesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDrivesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetDrivesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetDrivesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetDrivesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetDrivesRequest)
  return false;
#undef DO_
}

void GetDrivesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetDrivesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetDrivesRequest)
}

::google::protobuf::uint8* GetDrivesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDrivesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDrivesRequest)
  return target;
}

size_t GetDrivesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDrivesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDrivesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetDrivesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDrivesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDrivesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetDrivesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetDrivesRequest)
    MergeFrom(*source);
  }
}

void GetDrivesRequest::MergeFrom(const GetDrivesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDrivesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDrivesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetDrivesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDrivesRequest::CopyFrom(const GetDrivesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDrivesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDrivesRequest::IsInitialized() const {
  return true;
}

void GetDrivesRequest::Swap(GetDrivesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDrivesRequest::InternalSwap(GetDrivesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDrivesRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetDrivesResponse::InitAsDefaultInstance() {
}
void GetDrivesResponse::clear_drives() {
  drives_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetDrivesResponse::kDrivesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetDrivesResponse::GetDrivesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDrivesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetDrivesResponse)
}
GetDrivesResponse::GetDrivesResponse(const GetDrivesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      drives_(from.drives_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetDrivesResponse)
}

void GetDrivesResponse::SharedCtor() {
  _cached_size_ = 0;
}

GetDrivesResponse::~GetDrivesResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetDrivesResponse)
  SharedDtor();
}

void GetDrivesResponse::SharedDtor() {
}

void GetDrivesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetDrivesResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetDrivesResponse& GetDrivesResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetDrivesResponse();
  return *internal_default_instance();
}

GetDrivesResponse* GetDrivesResponse::New(::google::protobuf::Arena* arena) const {
  GetDrivesResponse* n = new GetDrivesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetDrivesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetDrivesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drives_.Clear();
  _internal_metadata_.Clear();
}

bool GetDrivesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetDrivesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .grpc_services.storage.Drive drives = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_drives()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetDrivesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetDrivesResponse)
  return false;
#undef DO_
}

void GetDrivesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetDrivesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_services.storage.Drive drives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drives_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->drives(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetDrivesResponse)
}

::google::protobuf::uint8* GetDrivesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetDrivesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .grpc_services.storage.Drive drives = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->drives_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->drives(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetDrivesResponse)
  return target;
}

size_t GetDrivesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetDrivesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grpc_services.storage.Drive drives = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->drives_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->drives(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetDrivesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetDrivesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDrivesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetDrivesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetDrivesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetDrivesResponse)
    MergeFrom(*source);
  }
}

void GetDrivesResponse::MergeFrom(const GetDrivesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetDrivesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  drives_.MergeFrom(from.drives_);
}

void GetDrivesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetDrivesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDrivesResponse::CopyFrom(const GetDrivesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetDrivesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDrivesResponse::IsInitialized() const {
  return true;
}

void GetDrivesResponse::Swap(GetDrivesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetDrivesResponse::InternalSwap(GetDrivesResponse* other) {
  using std::swap;
  drives_.InternalSwap(&other->drives_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetDrivesResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetItemRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetItemRequest::kDriveIdFieldNumber;
const int GetItemRequest::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetItemRequest::GetItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetItemRequest)
}
GetItemRequest::GetItemRequest(const GetItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetItemRequest)
}

void GetItemRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetItemRequest::~GetItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetItemRequest)
  SharedDtor();
}

void GetItemRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetItemRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetItemRequest& GetItemRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetItemRequest();
  return *internal_default_instance();
}

GetItemRequest* GetItemRequest::New(::google::protobuf::Arena* arena) const {
  GetItemRequest* n = new GetItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetItemRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetItemRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetItemRequest)
  return false;
#undef DO_
}

void GetItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetItemRequest)
}

::google::protobuf::uint8* GetItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetItemRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetItemRequest)
  return target;
}

size_t GetItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetItemRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetItemRequest)
    MergeFrom(*source);
  }
}

void GetItemRequest::MergeFrom(const GetItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
}

void GetItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetItemRequest::CopyFrom(const GetItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetItemRequest::IsInitialized() const {
  return true;
}

void GetItemRequest::Swap(GetItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetItemRequest::InternalSwap(GetItemRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetItemRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetItemResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_GetItemResponse_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void GetItemResponse::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetItemResponse::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetItemResponse::GetItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetItemResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetItemResponse)
}
GetItemResponse::GetItemResponse(const GetItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetItemResponse)
}

void GetItemResponse::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

GetItemResponse::~GetItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetItemResponse)
  SharedDtor();
}

void GetItemResponse::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void GetItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetItemResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetItemResponse& GetItemResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetItemResponse();
  return *internal_default_instance();
}

GetItemResponse* GetItemResponse::New(::google::protobuf::Arena* arena) const {
  GetItemResponse* n = new GetItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool GetItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetItemResponse)
  return false;
#undef DO_
}

void GetItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetItemResponse)
}

::google::protobuf::uint8* GetItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetItemResponse)
  return target;
}

size_t GetItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetItemResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetItemResponse)
    MergeFrom(*source);
  }
}

void GetItemResponse::MergeFrom(const GetItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void GetItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetItemResponse::CopyFrom(const GetItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetItemResponse::IsInitialized() const {
  return true;
}

void GetItemResponse::Swap(GetItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetItemResponse::InternalSwap(GetItemResponse* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetItemResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetChildrenRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetChildrenRequest::kDriveIdFieldNumber;
const int GetChildrenRequest::kItemIdFieldNumber;
const int GetChildrenRequest::kOffsetFieldNumber;
const int GetChildrenRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChildrenRequest::GetChildrenRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetChildrenRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetChildrenRequest)
}
GetChildrenRequest::GetChildrenRequest(const GetChildrenRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetChildrenRequest)
}

void GetChildrenRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _cached_size_ = 0;
}

GetChildrenRequest::~GetChildrenRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetChildrenRequest)
  SharedDtor();
}

void GetChildrenRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetChildrenRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChildrenRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChildrenRequest& GetChildrenRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetChildrenRequest();
  return *internal_default_instance();
}

GetChildrenRequest* GetChildrenRequest::New(::google::protobuf::Arena* arena) const {
  GetChildrenRequest* n = new GetChildrenRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetChildrenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetChildrenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool GetChildrenRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetChildrenRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetChildrenRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetChildrenRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetChildrenRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetChildrenRequest)
  return false;
#undef DO_
}

void GetChildrenRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetChildrenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetChildrenRequest)
}

::google::protobuf::uint8* GetChildrenRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetChildrenRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetChildrenRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetChildrenRequest)
  return target;
}

size_t GetChildrenRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetChildrenRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChildrenRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetChildrenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChildrenRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChildrenRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetChildrenRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetChildrenRequest)
    MergeFrom(*source);
  }
}

void GetChildrenRequest::MergeFrom(const GetChildrenRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetChildrenRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetChildrenRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetChildrenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChildrenRequest::CopyFrom(const GetChildrenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetChildrenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenRequest::IsInitialized() const {
  return true;
}

void GetChildrenRequest::Swap(GetChildrenRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChildrenRequest::InternalSwap(GetChildrenRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetChildrenRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetChildrenResponse::InitAsDefaultInstance() {
}
void GetChildrenResponse::clear_children() {
  children_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetChildrenResponse::kOffsetFieldNumber;
const int GetChildrenResponse::kTotalFieldNumber;
const int GetChildrenResponse::kChildrenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetChildrenResponse::GetChildrenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetChildrenResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetChildrenResponse)
}
GetChildrenResponse::GetChildrenResponse(const GetChildrenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      children_(from.children_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetChildrenResponse)
}

void GetChildrenResponse::SharedCtor() {
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_));
  _cached_size_ = 0;
}

GetChildrenResponse::~GetChildrenResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetChildrenResponse)
  SharedDtor();
}

void GetChildrenResponse::SharedDtor() {
}

void GetChildrenResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetChildrenResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetChildrenResponse& GetChildrenResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetChildrenResponse();
  return *internal_default_instance();
}

GetChildrenResponse* GetChildrenResponse::New(::google::protobuf::Arena* arena) const {
  GetChildrenResponse* n = new GetChildrenResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetChildrenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetChildrenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  children_.Clear();
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_));
  _internal_metadata_.Clear();
}

bool GetChildrenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetChildrenResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .grpc_services.storage.Item children = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_children()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetChildrenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetChildrenResponse)
  return false;
#undef DO_
}

void GetChildrenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetChildrenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // uint64 total = 2;
  if (this->total() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->total(), output);
  }

  // repeated .grpc_services.storage.Item children = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->children(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetChildrenResponse)
}

::google::protobuf::uint8* GetChildrenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetChildrenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // uint64 total = 2;
  if (this->total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->total(), target);
  }

  // repeated .grpc_services.storage.Item children = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->children_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->children(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetChildrenResponse)
  return target;
}

size_t GetChildrenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetChildrenResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .grpc_services.storage.Item children = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->children_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->children(static_cast<int>(i)));
    }
  }

  // uint64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 total = 2;
  if (this->total() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetChildrenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetChildrenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetChildrenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetChildrenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetChildrenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetChildrenResponse)
    MergeFrom(*source);
  }
}

void GetChildrenResponse::MergeFrom(const GetChildrenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetChildrenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  children_.MergeFrom(from.children_);
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.total() != 0) {
    set_total(from.total());
  }
}

void GetChildrenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetChildrenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetChildrenResponse::CopyFrom(const GetChildrenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetChildrenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetChildrenResponse::IsInitialized() const {
  return true;
}

void GetChildrenResponse::Swap(GetChildrenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetChildrenResponse::InternalSwap(GetChildrenResponse* other) {
  using std::swap;
  children_.InternalSwap(&other->children_);
  swap(offset_, other->offset_);
  swap(total_, other->total_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetChildrenResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetContentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetContentRequest::kDriveIdFieldNumber;
const int GetContentRequest::kItemIdFieldNumber;
const int GetContentRequest::kOffsetFieldNumber;
const int GetContentRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetContentRequest::GetContentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetContentRequest)
}
GetContentRequest::GetContentRequest(const GetContentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentRequest)
}

void GetContentRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _cached_size_ = 0;
}

GetContentRequest::~GetContentRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentRequest)
  SharedDtor();
}

void GetContentRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetContentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContentRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetContentRequest& GetContentRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentRequest();
  return *internal_default_instance();
}

GetContentRequest* GetContentRequest::New(::google::protobuf::Arena* arena) const {
  GetContentRequest* n = new GetContentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool GetContentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetContentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetContentRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetContentRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetContentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetContentRequest)
  return false;
#undef DO_
}

void GetContentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetContentRequest)
}

::google::protobuf::uint8* GetContentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentRequest)
  return target;
}

size_t GetContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetContentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetContentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetContentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetContentRequest)
    MergeFrom(*source);
  }
}

void GetContentRequest::MergeFrom(const GetContentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetContentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContentRequest::CopyFrom(const GetContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentRequest::IsInitialized() const {
  return true;
}

void GetContentRequest::Swap(GetContentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetContentRequest::InternalSwap(GetContentRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetContentRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetContentResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetContentResponse::kOffsetFieldNumber;
const int GetContentResponse::kCountFieldNumber;
const int GetContentResponse::kTotalSizeFieldNumber;
const int GetContentResponse::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetContentResponse::GetContentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetContentResponse)
}
GetContentResponse::GetContentResponse(const GetContentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentResponse)
}

void GetContentResponse::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _cached_size_ = 0;
}

GetContentResponse::~GetContentResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentResponse)
  SharedDtor();
}

void GetContentResponse::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetContentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContentResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetContentResponse& GetContentResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentResponse();
  return *internal_default_instance();
}

GetContentResponse* GetContentResponse::New(::google::protobuf::Arena* arena) const {
  GetContentResponse* n = new GetContentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _internal_metadata_.Clear();
}

bool GetContentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetContentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetContentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetContentResponse)
  return false;
#undef DO_
}

void GetContentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_size(), output);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetContentResponse)
}

::google::protobuf::uint8* GetContentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_size(), target);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentResponse)
  return target;
}

size_t GetContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetContentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetContentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetContentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetContentResponse)
    MergeFrom(*source);
  }
}

void GetContentResponse::MergeFrom(const GetContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void GetContentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContentResponse::CopyFrom(const GetContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentResponse::IsInitialized() const {
  return true;
}

void GetContentResponse::Swap(GetContentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetContentResponse::InternalSwap(GetContentResponse* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetContentResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetContentStreamRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetContentStreamRequest::kDriveIdFieldNumber;
const int GetContentStreamRequest::kItemIdFieldNumber;
const int GetContentStreamRequest::kOffsetFieldNumber;
const int GetContentStreamRequest::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetContentStreamRequest::GetContentStreamRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentStreamRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetContentStreamRequest)
}
GetContentStreamRequest::GetContentStreamRequest(const GetContentStreamRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentStreamRequest)
}

void GetContentStreamRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _cached_size_ = 0;
}

GetContentStreamRequest::~GetContentStreamRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentStreamRequest)
  SharedDtor();
}

void GetContentStreamRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetContentStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContentStreamRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetContentStreamRequest& GetContentStreamRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentStreamRequest();
  return *internal_default_instance();
}

GetContentStreamRequest* GetContentStreamRequest::New(::google::protobuf::Arena* arena) const {
  GetContentStreamRequest* n = new GetContentStreamRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetContentStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool GetContentStreamRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetContentStreamRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetContentStreamRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.GetContentStreamRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetContentStreamRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetContentStreamRequest)
  return false;
#undef DO_
}

void GetContentStreamRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetContentStreamRequest)
}

::google::protobuf::uint8* GetContentStreamRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.GetContentStreamRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentStreamRequest)
  return target;
}

size_t GetContentStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentStreamRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContentStreamRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetContentStreamRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetContentStreamRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetContentStreamRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetContentStreamRequest)
    MergeFrom(*source);
  }
}

void GetContentStreamRequest::MergeFrom(const GetContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void GetContentStreamRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContentStreamRequest::CopyFrom(const GetContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentStreamRequest::IsInitialized() const {
  return true;
}

void GetContentStreamRequest::Swap(GetContentStreamRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetContentStreamRequest::InternalSwap(GetContentStreamRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetContentStreamRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetContentStreamResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetContentStreamResponse::kOffsetFieldNumber;
const int GetContentStreamResponse::kCountFieldNumber;
const int GetContentStreamResponse::kTotalSizeFieldNumber;
const int GetContentStreamResponse::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetContentStreamResponse::GetContentStreamResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentStreamResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.GetContentStreamResponse)
}
GetContentStreamResponse::GetContentStreamResponse(const GetContentStreamResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&total_size_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.GetContentStreamResponse)
}

void GetContentStreamResponse::SharedCtor() {
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _cached_size_ = 0;
}

GetContentStreamResponse::~GetContentStreamResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.GetContentStreamResponse)
  SharedDtor();
}

void GetContentStreamResponse::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetContentStreamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetContentStreamResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetContentStreamResponse& GetContentStreamResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsGetContentStreamResponse();
  return *internal_default_instance();
}

GetContentStreamResponse* GetContentStreamResponse::New(::google::protobuf::Arena* arena) const {
  GetContentStreamResponse* n = new GetContentStreamResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetContentStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.GetContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_size_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(total_size_));
  _internal_metadata_.Clear();
}

bool GetContentStreamResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.GetContentStreamResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 offset = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 total_size = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.GetContentStreamResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.GetContentStreamResponse)
  return false;
#undef DO_
}

void GetContentStreamResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.GetContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->offset(), output);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->total_size(), output);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.GetContentStreamResponse)
}

::google::protobuf::uint8* GetContentStreamResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.GetContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 offset = 1;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->offset(), target);
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->total_size(), target);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.GetContentStreamResponse)
  return target;
}

size_t GetContentStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.GetContentStreamResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint64 offset = 1;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->count());
  }

  // uint64 total_size = 3;
  if (this->total_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->total_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetContentStreamResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.GetContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetContentStreamResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetContentStreamResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.GetContentStreamResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.GetContentStreamResponse)
    MergeFrom(*source);
  }
}

void GetContentStreamResponse::MergeFrom(const GetContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.GetContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.total_size() != 0) {
    set_total_size(from.total_size());
  }
}

void GetContentStreamResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.GetContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetContentStreamResponse::CopyFrom(const GetContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.GetContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetContentStreamResponse::IsInitialized() const {
  return true;
}

void GetContentStreamResponse::Swap(GetContentStreamResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetContentStreamResponse::InternalSwap(GetContentStreamResponse* other) {
  using std::swap;
  content_.Swap(&other->content_);
  swap(offset_, other->offset_);
  swap(count_, other->count_);
  swap(total_size_, other->total_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetContentStreamResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateDriveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDriveRequest::kNameFieldNumber;
const int CreateDriveRequest::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDriveRequest::CreateDriveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateDriveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.CreateDriveRequest)
}
CreateDriveRequest::CreateDriveRequest(const CreateDriveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateDriveRequest)
}

void CreateDriveRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateDriveRequest::~CreateDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateDriveRequest)
  SharedDtor();
}

void CreateDriveRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateDriveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateDriveRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateDriveRequest& CreateDriveRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateDriveRequest();
  return *internal_default_instance();
}

CreateDriveRequest* CreateDriveRequest::New(::google::protobuf::Arena* arena) const {
  CreateDriveRequest* n = new CreateDriveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateDriveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.CreateDriveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateDriveRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateDriveRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.CreateDriveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.CreateDriveRequest)
  return false;
#undef DO_
}

void CreateDriveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.CreateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.CreateDriveRequest)
}

::google::protobuf::uint8* CreateDriveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateDriveRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateDriveRequest)
  return target;
}

size_t CreateDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateDriveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateDriveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.CreateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDriveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDriveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.CreateDriveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.CreateDriveRequest)
    MergeFrom(*source);
  }
}

void CreateDriveRequest::MergeFrom(const CreateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void CreateDriveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.CreateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDriveRequest::CopyFrom(const CreateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDriveRequest::IsInitialized() const {
  return true;
}

void CreateDriveRequest::Swap(CreateDriveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDriveRequest::InternalSwap(CreateDriveRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateDriveRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateDriveResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_CreateDriveResponse_default_instance_._instance.get_mutable()->drive_ = const_cast< ::grpc_services::storage::Drive*>(
      ::grpc_services::storage::Drive::internal_default_instance());
}
void CreateDriveResponse::clear_drive() {
  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateDriveResponse::kDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateDriveResponse::CreateDriveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateDriveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.CreateDriveResponse)
}
CreateDriveResponse::CreateDriveResponse(const CreateDriveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateDriveResponse)
}

void CreateDriveResponse::SharedCtor() {
  drive_ = NULL;
  _cached_size_ = 0;
}

CreateDriveResponse::~CreateDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateDriveResponse)
  SharedDtor();
}

void CreateDriveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete drive_;
}

void CreateDriveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateDriveResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateDriveResponse& CreateDriveResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateDriveResponse();
  return *internal_default_instance();
}

CreateDriveResponse* CreateDriveResponse::New(::google::protobuf::Arena* arena) const {
  CreateDriveResponse* n = new CreateDriveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateDriveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.CreateDriveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Drive drive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.CreateDriveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.CreateDriveResponse)
  return false;
#undef DO_
}

void CreateDriveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.CreateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->drive_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.CreateDriveResponse)
}

::google::protobuf::uint8* CreateDriveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->drive_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateDriveResponse)
  return target;
}

size_t CreateDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateDriveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->drive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateDriveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.CreateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateDriveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateDriveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.CreateDriveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.CreateDriveResponse)
    MergeFrom(*source);
  }
}

void CreateDriveResponse::MergeFrom(const CreateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_drive()) {
    mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from.drive());
  }
}

void CreateDriveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.CreateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateDriveResponse::CopyFrom(const CreateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDriveResponse::IsInitialized() const {
  return true;
}

void CreateDriveResponse::Swap(CreateDriveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateDriveResponse::InternalSwap(CreateDriveResponse* other) {
  using std::swap;
  swap(drive_, other->drive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateDriveResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateItemRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateItemRequest::kDriveIdFieldNumber;
const int CreateItemRequest::kNameFieldNumber;
const int CreateItemRequest::kDescriptionFieldNumber;
const int CreateItemRequest::kParentIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateItemRequest::CreateItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.CreateItemRequest)
}
CreateItemRequest::CreateItemRequest(const CreateItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_id().size() > 0) {
    parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateItemRequest)
}

void CreateItemRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CreateItemRequest::~CreateItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateItemRequest)
  SharedDtor();
}

void CreateItemRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreateItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateItemRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateItemRequest& CreateItemRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateItemRequest();
  return *internal_default_instance();
}

CreateItemRequest* CreateItemRequest::New(::google::protobuf::Arena* arena) const {
  CreateItemRequest* n = new CreateItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CreateItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.CreateItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateItemRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateItemRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateItemRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_id().data(), static_cast<int>(this->parent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.CreateItemRequest.parent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.CreateItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.CreateItemRequest)
  return false;
#undef DO_
}

void CreateItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.CreateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string parent_id = 4;
  if (this->parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_id().data(), static_cast<int>(this->parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.parent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.CreateItemRequest)
}

::google::protobuf::uint8* CreateItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string parent_id = 4;
  if (this->parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_id().data(), static_cast<int>(this->parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.CreateItemRequest.parent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateItemRequest)
  return target;
}

size_t CreateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateItemRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string parent_id = 4;
  if (this->parent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.CreateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.CreateItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.CreateItemRequest)
    MergeFrom(*source);
  }
}

void CreateItemRequest::MergeFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.parent_id().size() > 0) {

    parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_id_);
  }
}

void CreateItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.CreateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateItemRequest::CopyFrom(const CreateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateItemRequest::IsInitialized() const {
  return true;
}

void CreateItemRequest::Swap(CreateItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateItemRequest::InternalSwap(CreateItemRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  parent_id_.Swap(&other->parent_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateItemRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateItemResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_CreateItemResponse_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void CreateItemResponse::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateItemResponse::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateItemResponse::CreateItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateItemResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.CreateItemResponse)
}
CreateItemResponse::CreateItemResponse(const CreateItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.CreateItemResponse)
}

void CreateItemResponse::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

CreateItemResponse::~CreateItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.CreateItemResponse)
  SharedDtor();
}

void CreateItemResponse::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void CreateItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateItemResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateItemResponse& CreateItemResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsCreateItemResponse();
  return *internal_default_instance();
}

CreateItemResponse* CreateItemResponse::New(::google::protobuf::Arena* arena) const {
  CreateItemResponse* n = new CreateItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.CreateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.CreateItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.CreateItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.CreateItemResponse)
  return false;
#undef DO_
}

void CreateItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.CreateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.CreateItemResponse)
}

::google::protobuf::uint8* CreateItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.CreateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.CreateItemResponse)
  return target;
}

size_t CreateItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.CreateItemResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.CreateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.CreateItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.CreateItemResponse)
    MergeFrom(*source);
  }
}

void CreateItemResponse::MergeFrom(const CreateItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.CreateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void CreateItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.CreateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateItemResponse::CopyFrom(const CreateItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.CreateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateItemResponse::IsInitialized() const {
  return true;
}

void CreateItemResponse::Swap(CreateItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateItemResponse::InternalSwap(CreateItemResponse* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateItemResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutContentStreamRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutContentStreamRequest::kDriveIdFieldNumber;
const int PutContentStreamRequest::kItemIdFieldNumber;
const int PutContentStreamRequest::kOffsetFieldNumber;
const int PutContentStreamRequest::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutContentStreamRequest::PutContentStreamRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsPutContentStreamRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.PutContentStreamRequest)
}
PutContentStreamRequest::PutContentStreamRequest(const PutContentStreamRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.content().size() > 0) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  offset_ = from.offset_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.PutContentStreamRequest)
}

void PutContentStreamRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

PutContentStreamRequest::~PutContentStreamRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.PutContentStreamRequest)
  SharedDtor();
}

void PutContentStreamRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PutContentStreamRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutContentStreamRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutContentStreamRequest& PutContentStreamRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsPutContentStreamRequest();
  return *internal_default_instance();
}

PutContentStreamRequest* PutContentStreamRequest::New(::google::protobuf::Arena* arena) const {
  PutContentStreamRequest* n = new PutContentStreamRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutContentStreamRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.PutContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  offset_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PutContentStreamRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.PutContentStreamRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.PutContentStreamRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.PutContentStreamRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes content = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.PutContentStreamRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.PutContentStreamRequest)
  return false;
#undef DO_
}

void PutContentStreamRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.PutContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->content(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.PutContentStreamRequest)
}

::google::protobuf::uint8* PutContentStreamRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.PutContentStreamRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.PutContentStreamRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->content(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.PutContentStreamRequest)
  return target;
}

size_t PutContentStreamRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.PutContentStreamRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // bytes content = 4;
  if (this->content().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutContentStreamRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.PutContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PutContentStreamRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutContentStreamRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.PutContentStreamRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.PutContentStreamRequest)
    MergeFrom(*source);
  }
}

void PutContentStreamRequest::MergeFrom(const PutContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.PutContentStreamRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.content().size() > 0) {

    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void PutContentStreamRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.PutContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutContentStreamRequest::CopyFrom(const PutContentStreamRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.PutContentStreamRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContentStreamRequest::IsInitialized() const {
  return true;
}

void PutContentStreamRequest::Swap(PutContentStreamRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutContentStreamRequest::InternalSwap(PutContentStreamRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  content_.Swap(&other->content_);
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutContentStreamRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutContentStreamResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_PutContentStreamResponse_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void PutContentStreamResponse::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutContentStreamResponse::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutContentStreamResponse::PutContentStreamResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsPutContentStreamResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.PutContentStreamResponse)
}
PutContentStreamResponse::PutContentStreamResponse(const PutContentStreamResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.PutContentStreamResponse)
}

void PutContentStreamResponse::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

PutContentStreamResponse::~PutContentStreamResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.PutContentStreamResponse)
  SharedDtor();
}

void PutContentStreamResponse::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void PutContentStreamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutContentStreamResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutContentStreamResponse& PutContentStreamResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsPutContentStreamResponse();
  return *internal_default_instance();
}

PutContentStreamResponse* PutContentStreamResponse::New(::google::protobuf::Arena* arena) const {
  PutContentStreamResponse* n = new PutContentStreamResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutContentStreamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.PutContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool PutContentStreamResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.PutContentStreamResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.PutContentStreamResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.PutContentStreamResponse)
  return false;
#undef DO_
}

void PutContentStreamResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.PutContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.PutContentStreamResponse)
}

::google::protobuf::uint8* PutContentStreamResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.PutContentStreamResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.PutContentStreamResponse)
  return target;
}

size_t PutContentStreamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.PutContentStreamResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutContentStreamResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.PutContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PutContentStreamResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutContentStreamResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.PutContentStreamResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.PutContentStreamResponse)
    MergeFrom(*source);
  }
}

void PutContentStreamResponse::MergeFrom(const PutContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.PutContentStreamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void PutContentStreamResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.PutContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutContentStreamResponse::CopyFrom(const PutContentStreamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.PutContentStreamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutContentStreamResponse::IsInitialized() const {
  return true;
}

void PutContentStreamResponse::Swap(PutContentStreamResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutContentStreamResponse::InternalSwap(PutContentStreamResponse* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutContentStreamResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TruncateContentRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TruncateContentRequest::kDriveIdFieldNumber;
const int TruncateContentRequest::kItemIdFieldNumber;
const int TruncateContentRequest::kNewLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TruncateContentRequest::TruncateContentRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsTruncateContentRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.TruncateContentRequest)
}
TruncateContentRequest::TruncateContentRequest(const TruncateContentRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  new_length_ = from.new_length_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.TruncateContentRequest)
}

void TruncateContentRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_length_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

TruncateContentRequest::~TruncateContentRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.TruncateContentRequest)
  SharedDtor();
}

void TruncateContentRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TruncateContentRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TruncateContentRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TruncateContentRequest& TruncateContentRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsTruncateContentRequest();
  return *internal_default_instance();
}

TruncateContentRequest* TruncateContentRequest::New(::google::protobuf::Arena* arena) const {
  TruncateContentRequest* n = new TruncateContentRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TruncateContentRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.TruncateContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_length_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool TruncateContentRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.TruncateContentRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.TruncateContentRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.TruncateContentRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 new_length = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &new_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.TruncateContentRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.TruncateContentRequest)
  return false;
#undef DO_
}

void TruncateContentRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.TruncateContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  // uint64 new_length = 3;
  if (this->new_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->new_length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.TruncateContentRequest)
}

::google::protobuf::uint8* TruncateContentRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.TruncateContentRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.TruncateContentRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  // uint64 new_length = 3;
  if (this->new_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->new_length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.TruncateContentRequest)
  return target;
}

size_t TruncateContentRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.TruncateContentRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  // uint64 new_length = 3;
  if (this->new_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->new_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TruncateContentRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.TruncateContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TruncateContentRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TruncateContentRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.TruncateContentRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.TruncateContentRequest)
    MergeFrom(*source);
  }
}

void TruncateContentRequest::MergeFrom(const TruncateContentRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.TruncateContentRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  if (from.new_length() != 0) {
    set_new_length(from.new_length());
  }
}

void TruncateContentRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.TruncateContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruncateContentRequest::CopyFrom(const TruncateContentRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.TruncateContentRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateContentRequest::IsInitialized() const {
  return true;
}

void TruncateContentRequest::Swap(TruncateContentRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TruncateContentRequest::InternalSwap(TruncateContentRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  swap(new_length_, other->new_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TruncateContentRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TruncateContentResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_TruncateContentResponse_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void TruncateContentResponse::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TruncateContentResponse::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TruncateContentResponse::TruncateContentResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsTruncateContentResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.TruncateContentResponse)
}
TruncateContentResponse::TruncateContentResponse(const TruncateContentResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.TruncateContentResponse)
}

void TruncateContentResponse::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

TruncateContentResponse::~TruncateContentResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.TruncateContentResponse)
  SharedDtor();
}

void TruncateContentResponse::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void TruncateContentResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TruncateContentResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TruncateContentResponse& TruncateContentResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsTruncateContentResponse();
  return *internal_default_instance();
}

TruncateContentResponse* TruncateContentResponse::New(::google::protobuf::Arena* arena) const {
  TruncateContentResponse* n = new TruncateContentResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TruncateContentResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.TruncateContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool TruncateContentResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.TruncateContentResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.TruncateContentResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.TruncateContentResponse)
  return false;
#undef DO_
}

void TruncateContentResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.TruncateContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.TruncateContentResponse)
}

::google::protobuf::uint8* TruncateContentResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.TruncateContentResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.TruncateContentResponse)
  return target;
}

size_t TruncateContentResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.TruncateContentResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TruncateContentResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.TruncateContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TruncateContentResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TruncateContentResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.TruncateContentResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.TruncateContentResponse)
    MergeFrom(*source);
  }
}

void TruncateContentResponse::MergeFrom(const TruncateContentResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.TruncateContentResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void TruncateContentResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.TruncateContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TruncateContentResponse::CopyFrom(const TruncateContentResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.TruncateContentResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TruncateContentResponse::IsInitialized() const {
  return true;
}

void TruncateContentResponse::Swap(TruncateContentResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TruncateContentResponse::InternalSwap(TruncateContentResponse* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TruncateContentResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateDriveRequest::InitAsDefaultInstance() {
  ::grpc_services::storage::_UpdateDriveRequest_default_instance_._instance.get_mutable()->drive_ = const_cast< ::grpc_services::storage::Drive*>(
      ::grpc_services::storage::Drive::internal_default_instance());
}
void UpdateDriveRequest::clear_drive() {
  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDriveRequest::kDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDriveRequest::UpdateDriveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateDriveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.UpdateDriveRequest)
}
UpdateDriveRequest::UpdateDriveRequest(const UpdateDriveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateDriveRequest)
}

void UpdateDriveRequest::SharedCtor() {
  drive_ = NULL;
  _cached_size_ = 0;
}

UpdateDriveRequest::~UpdateDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateDriveRequest)
  SharedDtor();
}

void UpdateDriveRequest::SharedDtor() {
  if (this != internal_default_instance()) delete drive_;
}

void UpdateDriveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDriveRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateDriveRequest& UpdateDriveRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateDriveRequest();
  return *internal_default_instance();
}

UpdateDriveRequest* UpdateDriveRequest::New(::google::protobuf::Arena* arena) const {
  UpdateDriveRequest* n = new UpdateDriveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateDriveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.UpdateDriveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Drive drive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.UpdateDriveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.UpdateDriveRequest)
  return false;
#undef DO_
}

void UpdateDriveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.UpdateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->drive_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.UpdateDriveRequest)
}

::google::protobuf::uint8* UpdateDriveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->drive_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateDriveRequest)
  return target;
}

size_t UpdateDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateDriveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->drive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDriveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.UpdateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDriveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDriveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.UpdateDriveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.UpdateDriveRequest)
    MergeFrom(*source);
  }
}

void UpdateDriveRequest::MergeFrom(const UpdateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_drive()) {
    mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from.drive());
  }
}

void UpdateDriveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.UpdateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDriveRequest::CopyFrom(const UpdateDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDriveRequest::IsInitialized() const {
  return true;
}

void UpdateDriveRequest::Swap(UpdateDriveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDriveRequest::InternalSwap(UpdateDriveRequest* other) {
  using std::swap;
  swap(drive_, other->drive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDriveRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateDriveResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_UpdateDriveResponse_default_instance_._instance.get_mutable()->drive_ = const_cast< ::grpc_services::storage::Drive*>(
      ::grpc_services::storage::Drive::internal_default_instance());
}
void UpdateDriveResponse::clear_drive() {
  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateDriveResponse::kDriveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateDriveResponse::UpdateDriveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateDriveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.UpdateDriveResponse)
}
UpdateDriveResponse::UpdateDriveResponse(const UpdateDriveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_drive()) {
    drive_ = new ::grpc_services::storage::Drive(*from.drive_);
  } else {
    drive_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateDriveResponse)
}

void UpdateDriveResponse::SharedCtor() {
  drive_ = NULL;
  _cached_size_ = 0;
}

UpdateDriveResponse::~UpdateDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateDriveResponse)
  SharedDtor();
}

void UpdateDriveResponse::SharedDtor() {
  if (this != internal_default_instance()) delete drive_;
}

void UpdateDriveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateDriveResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateDriveResponse& UpdateDriveResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateDriveResponse();
  return *internal_default_instance();
}

UpdateDriveResponse* UpdateDriveResponse::New(::google::protobuf::Arena* arena) const {
  UpdateDriveResponse* n = new UpdateDriveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && drive_ != NULL) {
    delete drive_;
  }
  drive_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateDriveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.UpdateDriveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Drive drive = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.UpdateDriveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.UpdateDriveResponse)
  return false;
#undef DO_
}

void UpdateDriveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.UpdateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->drive_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.UpdateDriveResponse)
}

::google::protobuf::uint8* UpdateDriveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->drive_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateDriveResponse)
  return target;
}

size_t UpdateDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateDriveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Drive drive = 1;
  if (this->has_drive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->drive_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateDriveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.UpdateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateDriveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateDriveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.UpdateDriveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.UpdateDriveResponse)
    MergeFrom(*source);
  }
}

void UpdateDriveResponse::MergeFrom(const UpdateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_drive()) {
    mutable_drive()->::grpc_services::storage::Drive::MergeFrom(from.drive());
  }
}

void UpdateDriveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.UpdateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateDriveResponse::CopyFrom(const UpdateDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDriveResponse::IsInitialized() const {
  return true;
}

void UpdateDriveResponse::Swap(UpdateDriveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateDriveResponse::InternalSwap(UpdateDriveResponse* other) {
  using std::swap;
  swap(drive_, other->drive_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateDriveResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateItemRequest::InitAsDefaultInstance() {
  ::grpc_services::storage::_UpdateItemRequest_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void UpdateItemRequest::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateItemRequest::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateItemRequest::UpdateItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.UpdateItemRequest)
}
UpdateItemRequest::UpdateItemRequest(const UpdateItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateItemRequest)
}

void UpdateItemRequest::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

UpdateItemRequest::~UpdateItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateItemRequest)
  SharedDtor();
}

void UpdateItemRequest::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void UpdateItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateItemRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateItemRequest& UpdateItemRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateItemRequest();
  return *internal_default_instance();
}

UpdateItemRequest* UpdateItemRequest::New(::google::protobuf::Arena* arena) const {
  UpdateItemRequest* n = new UpdateItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.UpdateItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.UpdateItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.UpdateItemRequest)
  return false;
#undef DO_
}

void UpdateItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.UpdateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.UpdateItemRequest)
}

::google::protobuf::uint8* UpdateItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateItemRequest)
  return target;
}

size_t UpdateItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateItemRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.UpdateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.UpdateItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.UpdateItemRequest)
    MergeFrom(*source);
  }
}

void UpdateItemRequest::MergeFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void UpdateItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.UpdateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateItemRequest::CopyFrom(const UpdateItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateItemRequest::IsInitialized() const {
  return true;
}

void UpdateItemRequest::Swap(UpdateItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateItemRequest::InternalSwap(UpdateItemRequest* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateItemRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateItemResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_UpdateItemResponse_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
void UpdateItemResponse::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateItemResponse::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateItemResponse::UpdateItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateItemResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.UpdateItemResponse)
}
UpdateItemResponse::UpdateItemResponse(const UpdateItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.UpdateItemResponse)
}

void UpdateItemResponse::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

UpdateItemResponse::~UpdateItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.UpdateItemResponse)
  SharedDtor();
}

void UpdateItemResponse::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void UpdateItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateItemResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateItemResponse& UpdateItemResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsUpdateItemResponse();
  return *internal_default_instance();
}

UpdateItemResponse* UpdateItemResponse::New(::google::protobuf::Arena* arena) const {
  UpdateItemResponse* n = new UpdateItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.UpdateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.UpdateItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.UpdateItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.UpdateItemResponse)
  return false;
#undef DO_
}

void UpdateItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.UpdateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.UpdateItemResponse)
}

::google::protobuf::uint8* UpdateItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.UpdateItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.UpdateItemResponse)
  return target;
}

size_t UpdateItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.UpdateItemResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.UpdateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.UpdateItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.UpdateItemResponse)
    MergeFrom(*source);
  }
}

void UpdateItemResponse::MergeFrom(const UpdateItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.UpdateItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void UpdateItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.UpdateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateItemResponse::CopyFrom(const UpdateItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.UpdateItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateItemResponse::IsInitialized() const {
  return true;
}

void UpdateItemResponse::Swap(UpdateItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateItemResponse::InternalSwap(UpdateItemResponse* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateItemResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveDriveRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveDriveRequest::kDriveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveDriveRequest::RemoveDriveRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveDriveRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.RemoveDriveRequest)
}
RemoveDriveRequest::RemoveDriveRequest(const RemoveDriveRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveDriveRequest)
}

void RemoveDriveRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RemoveDriveRequest::~RemoveDriveRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveDriveRequest)
  SharedDtor();
}

void RemoveDriveRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveDriveRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveDriveRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveDriveRequest& RemoveDriveRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveDriveRequest();
  return *internal_default_instance();
}

RemoveDriveRequest* RemoveDriveRequest::New(::google::protobuf::Arena* arena) const {
  RemoveDriveRequest* n = new RemoveDriveRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveDriveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemoveDriveRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.RemoveDriveRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.RemoveDriveRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.RemoveDriveRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.RemoveDriveRequest)
  return false;
#undef DO_
}

void RemoveDriveRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.RemoveDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveDriveRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.RemoveDriveRequest)
}

::google::protobuf::uint8* RemoveDriveRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveDriveRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveDriveRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveDriveRequest)
  return target;
}

size_t RemoveDriveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveDriveRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveDriveRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.RemoveDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveDriveRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveDriveRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.RemoveDriveRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.RemoveDriveRequest)
    MergeFrom(*source);
  }
}

void RemoveDriveRequest::MergeFrom(const RemoveDriveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveDriveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
}

void RemoveDriveRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.RemoveDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveDriveRequest::CopyFrom(const RemoveDriveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveDriveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveDriveRequest::IsInitialized() const {
  return true;
}

void RemoveDriveRequest::Swap(RemoveDriveRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveDriveRequest::InternalSwap(RemoveDriveRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveDriveRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveDriveResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveDriveResponse::RemoveDriveResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveDriveResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.RemoveDriveResponse)
}
RemoveDriveResponse::RemoveDriveResponse(const RemoveDriveResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveDriveResponse)
}

void RemoveDriveResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemoveDriveResponse::~RemoveDriveResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveDriveResponse)
  SharedDtor();
}

void RemoveDriveResponse::SharedDtor() {
}

void RemoveDriveResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveDriveResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveDriveResponse& RemoveDriveResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveDriveResponse();
  return *internal_default_instance();
}

RemoveDriveResponse* RemoveDriveResponse::New(::google::protobuf::Arena* arena) const {
  RemoveDriveResponse* n = new RemoveDriveResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveDriveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveDriveResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.RemoveDriveResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.RemoveDriveResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.RemoveDriveResponse)
  return false;
#undef DO_
}

void RemoveDriveResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.RemoveDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.RemoveDriveResponse)
}

::google::protobuf::uint8* RemoveDriveResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveDriveResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveDriveResponse)
  return target;
}

size_t RemoveDriveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveDriveResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveDriveResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.RemoveDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveDriveResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveDriveResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.RemoveDriveResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.RemoveDriveResponse)
    MergeFrom(*source);
  }
}

void RemoveDriveResponse::MergeFrom(const RemoveDriveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveDriveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveDriveResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.RemoveDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveDriveResponse::CopyFrom(const RemoveDriveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveDriveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveDriveResponse::IsInitialized() const {
  return true;
}

void RemoveDriveResponse::Swap(RemoveDriveResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveDriveResponse::InternalSwap(RemoveDriveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveDriveResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveItemRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveItemRequest::kDriveIdFieldNumber;
const int RemoveItemRequest::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveItemRequest::RemoveItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveItemRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.RemoveItemRequest)
}
RemoveItemRequest::RemoveItemRequest(const RemoveItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.item_id().size() > 0) {
    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveItemRequest)
}

void RemoveItemRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RemoveItemRequest::~RemoveItemRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveItemRequest)
  SharedDtor();
}

void RemoveItemRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RemoveItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveItemRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveItemRequest& RemoveItemRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveItemRequest();
  return *internal_default_instance();
}

RemoveItemRequest* RemoveItemRequest::New(::google::protobuf::Arena* arena) const {
  RemoveItemRequest* n = new RemoveItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RemoveItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.RemoveItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.RemoveItemRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->item_id().data(), static_cast<int>(this->item_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.RemoveItemRequest.item_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.RemoveItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.RemoveItemRequest)
  return false;
#undef DO_
}

void RemoveItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.RemoveItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.item_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->item_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.RemoveItemRequest)
}

::google::protobuf::uint8* RemoveItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->item_id().data(), static_cast<int>(this->item_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.RemoveItemRequest.item_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->item_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveItemRequest)
  return target;
}

size_t RemoveItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveItemRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  // string item_id = 2;
  if (this->item_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.RemoveItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.RemoveItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.RemoveItemRequest)
    MergeFrom(*source);
  }
}

void RemoveItemRequest::MergeFrom(const RemoveItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  if (from.item_id().size() > 0) {

    item_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_id_);
  }
}

void RemoveItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.RemoveItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveItemRequest::CopyFrom(const RemoveItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveItemRequest::IsInitialized() const {
  return true;
}

void RemoveItemRequest::Swap(RemoveItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveItemRequest::InternalSwap(RemoveItemRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  item_id_.Swap(&other->item_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveItemRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoveItemResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveItemResponse::RemoveItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveItemResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.RemoveItemResponse)
}
RemoveItemResponse::RemoveItemResponse(const RemoveItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.RemoveItemResponse)
}

void RemoveItemResponse::SharedCtor() {
  _cached_size_ = 0;
}

RemoveItemResponse::~RemoveItemResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.RemoveItemResponse)
  SharedDtor();
}

void RemoveItemResponse::SharedDtor() {
}

void RemoveItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveItemResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoveItemResponse& RemoveItemResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsRemoveItemResponse();
  return *internal_default_instance();
}

RemoveItemResponse* RemoveItemResponse::New(::google::protobuf::Arena* arena) const {
  RemoveItemResponse* n = new RemoveItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.RemoveItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool RemoveItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.RemoveItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.RemoveItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.RemoveItemResponse)
  return false;
#undef DO_
}

void RemoveItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.RemoveItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.RemoveItemResponse)
}

::google::protobuf::uint8* RemoveItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.RemoveItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.RemoveItemResponse)
  return target;
}

size_t RemoveItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.RemoveItemResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.RemoveItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.RemoveItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.RemoveItemResponse)
    MergeFrom(*source);
  }
}

void RemoveItemResponse::MergeFrom(const RemoveItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.RemoveItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RemoveItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.RemoveItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveItemResponse::CopyFrom(const RemoveItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.RemoveItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveItemResponse::IsInitialized() const {
  return true;
}

void RemoveItemResponse::Swap(RemoveItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveItemResponse::InternalSwap(RemoveItemResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveItemResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchChangesRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchChangesRequest::kDriveIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchChangesRequest::WatchChangesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsWatchChangesRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.WatchChangesRequest)
}
WatchChangesRequest::WatchChangesRequest(const WatchChangesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.drive_id().size() > 0) {
    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.WatchChangesRequest)
}

void WatchChangesRequest::SharedCtor() {
  drive_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

WatchChangesRequest::~WatchChangesRequest() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.WatchChangesRequest)
  SharedDtor();
}

void WatchChangesRequest::SharedDtor() {
  drive_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void WatchChangesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchChangesRequest::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchChangesRequest& WatchChangesRequest::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsWatchChangesRequest();
  return *internal_default_instance();
}

WatchChangesRequest* WatchChangesRequest::New(::google::protobuf::Arena* arena) const {
  WatchChangesRequest* n = new WatchChangesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.WatchChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  drive_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool WatchChangesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.WatchChangesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string drive_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_drive_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->drive_id().data(), static_cast<int>(this->drive_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.WatchChangesRequest.drive_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.WatchChangesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.WatchChangesRequest)
  return false;
#undef DO_
}

void WatchChangesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.WatchChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.WatchChangesRequest.drive_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->drive_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.WatchChangesRequest)
}

::google::protobuf::uint8* WatchChangesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.WatchChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->drive_id().data(), static_cast<int>(this->drive_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.WatchChangesRequest.drive_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->drive_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.WatchChangesRequest)
  return target;
}

size_t WatchChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.WatchChangesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string drive_id = 1;
  if (this->drive_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->drive_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchChangesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.WatchChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchChangesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchChangesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.WatchChangesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.WatchChangesRequest)
    MergeFrom(*source);
  }
}

void WatchChangesRequest::MergeFrom(const WatchChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.WatchChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.drive_id().size() > 0) {

    drive_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.drive_id_);
  }
}

void WatchChangesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.WatchChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchChangesRequest::CopyFrom(const WatchChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.WatchChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchChangesRequest::IsInitialized() const {
  return true;
}

void WatchChangesRequest::Swap(WatchChangesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchChangesRequest::InternalSwap(WatchChangesRequest* other) {
  using std::swap;
  drive_id_.Swap(&other->drive_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchChangesRequest::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WatchChangesResponse::InitAsDefaultInstance() {
  ::grpc_services::storage::_WatchChangesResponse_default_instance_.created_ = const_cast< ::grpc_services::storage::ItemCreatedEvent*>(
      ::grpc_services::storage::ItemCreatedEvent::internal_default_instance());
  ::grpc_services::storage::_WatchChangesResponse_default_instance_.removed_ = const_cast< ::grpc_services::storage::ItemRemovedEvent*>(
      ::grpc_services::storage::ItemRemovedEvent::internal_default_instance());
  ::grpc_services::storage::_WatchChangesResponse_default_instance_.updated_ = const_cast< ::grpc_services::storage::ItemContentUpdatedEvent*>(
      ::grpc_services::storage::ItemContentUpdatedEvent::internal_default_instance());
}
void WatchChangesResponse::set_allocated_created(::grpc_services::storage::ItemCreatedEvent* created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_event();
  if (created) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, created, submessage_arena);
    }
    set_has_created();
    test_event_.created_ = created;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.created)
}
void WatchChangesResponse::clear_created() {
  if (has_created()) {
    delete test_event_.created_;
    clear_has_test_event();
  }
}
void WatchChangesResponse::set_allocated_removed(::grpc_services::storage::ItemRemovedEvent* removed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_event();
  if (removed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      removed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, removed, submessage_arena);
    }
    set_has_removed();
    test_event_.removed_ = removed;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.removed)
}
void WatchChangesResponse::clear_removed() {
  if (has_removed()) {
    delete test_event_.removed_;
    clear_has_test_event();
  }
}
void WatchChangesResponse::set_allocated_updated(::grpc_services::storage::ItemContentUpdatedEvent* updated) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_event();
  if (updated) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      updated = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, updated, submessage_arena);
    }
    set_has_updated();
    test_event_.updated_ = updated;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.WatchChangesResponse.updated)
}
void WatchChangesResponse::clear_updated() {
  if (has_updated()) {
    delete test_event_.updated_;
    clear_has_test_event();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WatchChangesResponse::kCreatedFieldNumber;
const int WatchChangesResponse::kRemovedFieldNumber;
const int WatchChangesResponse::kUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WatchChangesResponse::WatchChangesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fstorage_2eproto::InitDefaultsWatchChangesResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.WatchChangesResponse)
}
WatchChangesResponse::WatchChangesResponse(const WatchChangesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_test_event();
  switch (from.test_event_case()) {
    case kCreated: {
      mutable_created()->::grpc_services::storage::ItemCreatedEvent::MergeFrom(from.created());
      break;
    }
    case kRemoved: {
      mutable_removed()->::grpc_services::storage::ItemRemovedEvent::MergeFrom(from.removed());
      break;
    }
    case kUpdated: {
      mutable_updated()->::grpc_services::storage::ItemContentUpdatedEvent::MergeFrom(from.updated());
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.WatchChangesResponse)
}

void WatchChangesResponse::SharedCtor() {
  clear_has_test_event();
  _cached_size_ = 0;
}

WatchChangesResponse::~WatchChangesResponse() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.WatchChangesResponse)
  SharedDtor();
}

void WatchChangesResponse::SharedDtor() {
  if (has_test_event()) {
    clear_test_event();
  }
}

void WatchChangesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WatchChangesResponse::descriptor() {
  ::protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WatchChangesResponse& WatchChangesResponse::default_instance() {
  ::protobuf_storage_2fstorage_2eproto::InitDefaultsWatchChangesResponse();
  return *internal_default_instance();
}

WatchChangesResponse* WatchChangesResponse::New(::google::protobuf::Arena* arena) const {
  WatchChangesResponse* n = new WatchChangesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void WatchChangesResponse::clear_test_event() {
// @@protoc_insertion_point(one_of_clear_start:grpc_services.storage.WatchChangesResponse)
  switch (test_event_case()) {
    case kCreated: {
      delete test_event_.created_;
      break;
    }
    case kRemoved: {
      delete test_event_.removed_;
      break;
    }
    case kUpdated: {
      delete test_event_.updated_;
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_EVENT_NOT_SET;
}


void WatchChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.WatchChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_test_event();
  _internal_metadata_.Clear();
}

bool WatchChangesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.WatchChangesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.ItemCreatedEvent created = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.storage.ItemRemovedEvent removed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_removed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.WatchChangesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.WatchChangesResponse)
  return false;
#undef DO_
}

void WatchChangesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.WatchChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.ItemCreatedEvent created = 1;
  if (has_created()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *test_event_.created_, output);
  }

  // .grpc_services.storage.ItemRemovedEvent removed = 2;
  if (has_removed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *test_event_.removed_, output);
  }

  // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
  if (has_updated()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *test_event_.updated_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.WatchChangesResponse)
}

::google::protobuf::uint8* WatchChangesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.WatchChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.ItemCreatedEvent created = 1;
  if (has_created()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *test_event_.created_, deterministic, target);
  }

  // .grpc_services.storage.ItemRemovedEvent removed = 2;
  if (has_removed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *test_event_.removed_, deterministic, target);
  }

  // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
  if (has_updated()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *test_event_.updated_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.WatchChangesResponse)
  return target;
}

size_t WatchChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.WatchChangesResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (test_event_case()) {
    // .grpc_services.storage.ItemCreatedEvent created = 1;
    case kCreated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_event_.created_);
      break;
    }
    // .grpc_services.storage.ItemRemovedEvent removed = 2;
    case kRemoved: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_event_.removed_);
      break;
    }
    // .grpc_services.storage.ItemContentUpdatedEvent updated = 3;
    case kUpdated: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_event_.updated_);
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WatchChangesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.WatchChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WatchChangesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WatchChangesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.WatchChangesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.WatchChangesResponse)
    MergeFrom(*source);
  }
}

void WatchChangesResponse::MergeFrom(const WatchChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.WatchChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.test_event_case()) {
    case kCreated: {
      mutable_created()->::grpc_services::storage::ItemCreatedEvent::MergeFrom(from.created());
      break;
    }
    case kRemoved: {
      mutable_removed()->::grpc_services::storage::ItemRemovedEvent::MergeFrom(from.removed());
      break;
    }
    case kUpdated: {
      mutable_updated()->::grpc_services::storage::ItemContentUpdatedEvent::MergeFrom(from.updated());
      break;
    }
    case TEST_EVENT_NOT_SET: {
      break;
    }
  }
}

void WatchChangesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.WatchChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WatchChangesResponse::CopyFrom(const WatchChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.WatchChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WatchChangesResponse::IsInitialized() const {
  return true;
}

void WatchChangesResponse::Swap(WatchChangesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WatchChangesResponse::InternalSwap(WatchChangesResponse* other) {
  using std::swap;
  swap(test_event_, other->test_event_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WatchChangesResponse::GetMetadata() const {
  protobuf_storage_2fstorage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fstorage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace storage
}  // namespace grpc_services

// @@protoc_insertion_point(global_scope)
