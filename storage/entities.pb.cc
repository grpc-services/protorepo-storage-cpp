// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: storage/entities.proto

#include "storage/entities.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace grpc_services {
namespace storage {
class HashesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Hashes>
      _instance;
} _Hashes_default_instance_;
class FolderFacetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FolderFacet>
      _instance;
} _FolderFacet_default_instance_;
class FileFacetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FileFacet>
      _instance;
} _FileFacet_default_instance_;
class AudioFacetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioFacet>
      _instance;
} _AudioFacet_default_instance_;
class DriveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Drive>
      _instance;
} _Drive_default_instance_;
class ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Item>
      _instance;
  const ::grpc_services::storage::FileFacet* file_;
  const ::grpc_services::storage::FolderFacet* folder_;
} _Item_default_instance_;
class ItemCreatedEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemCreatedEvent>
      _instance;
} _ItemCreatedEvent_default_instance_;
class ItemRemovedEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemRemovedEvent>
      _instance;
} _ItemRemovedEvent_default_instance_;
class ItemContentUpdatedEventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemContentUpdatedEvent>
      _instance;
} _ItemContentUpdatedEvent_default_instance_;
}  // namespace storage
}  // namespace grpc_services
namespace protobuf_storage_2fentities_2eproto {
void InitDefaultsHashesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_Hashes_default_instance_;
    new (ptr) ::grpc_services::storage::Hashes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::Hashes::InitAsDefaultInstance();
}

void InitDefaultsHashes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHashesImpl);
}

void InitDefaultsFolderFacetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_FolderFacet_default_instance_;
    new (ptr) ::grpc_services::storage::FolderFacet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::FolderFacet::InitAsDefaultInstance();
}

void InitDefaultsFolderFacet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFolderFacetImpl);
}

void InitDefaultsFileFacetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsHashes();
  protobuf_storage_2fentities_2eproto::InitDefaultsAudioFacet();
  {
    void* ptr = &::grpc_services::storage::_FileFacet_default_instance_;
    new (ptr) ::grpc_services::storage::FileFacet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::FileFacet::InitAsDefaultInstance();
}

void InitDefaultsFileFacet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFileFacetImpl);
}

void InitDefaultsAudioFacetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::grpc_services::storage::_AudioFacet_default_instance_;
    new (ptr) ::grpc_services::storage::AudioFacet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::AudioFacet::InitAsDefaultInstance();
}

void InitDefaultsAudioFacet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAudioFacetImpl);
}

void InitDefaultsDriveImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fTimestamp_2eproto::InitDefaultsTimestamp();
  {
    void* ptr = &::grpc_services::storage::_Drive_default_instance_;
    new (ptr) ::grpc_services::storage::Drive();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::Drive::InitAsDefaultInstance();
}

void InitDefaultsDrive() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDriveImpl);
}

void InitDefaultsItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_common_2fTimestamp_2eproto::InitDefaultsTimestamp();
  protobuf_storage_2fentities_2eproto::InitDefaultsFileFacet();
  protobuf_storage_2fentities_2eproto::InitDefaultsFolderFacet();
  {
    void* ptr = &::grpc_services::storage::_Item_default_instance_;
    new (ptr) ::grpc_services::storage::Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::Item::InitAsDefaultInstance();
}

void InitDefaultsItem() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemImpl);
}

void InitDefaultsItemCreatedEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_ItemCreatedEvent_default_instance_;
    new (ptr) ::grpc_services::storage::ItemCreatedEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::ItemCreatedEvent::InitAsDefaultInstance();
}

void InitDefaultsItemCreatedEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemCreatedEventImpl);
}

void InitDefaultsItemRemovedEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_ItemRemovedEvent_default_instance_;
    new (ptr) ::grpc_services::storage::ItemRemovedEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::ItemRemovedEvent::InitAsDefaultInstance();
}

void InitDefaultsItemRemovedEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemRemovedEventImpl);
}

void InitDefaultsItemContentUpdatedEventImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  {
    void* ptr = &::grpc_services::storage::_ItemContentUpdatedEvent_default_instance_;
    new (ptr) ::grpc_services::storage::ItemContentUpdatedEvent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::grpc_services::storage::ItemContentUpdatedEvent::InitAsDefaultInstance();
}

void InitDefaultsItemContentUpdatedEvent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsItemContentUpdatedEventImpl);
}

::google::protobuf::Metadata file_level_metadata[9];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Hashes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Hashes, crc32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Hashes, sha1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Hashes, md5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Hashes, sha512_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FolderFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FolderFacet, num_items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FileFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FileFacet, hashes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FileFacet, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::FileFacet, audio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::AudioFacet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::AudioFacet, bitrate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::AudioFacet, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::AudioFacet, is_vbr_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, created_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, last_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Drive, last_item_modified_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, created_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, last_modified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, size_),
  offsetof(::grpc_services::storage::ItemDefaultTypeInternal, file_),
  offsetof(::grpc_services::storage::ItemDefaultTypeInternal, folder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::Item, test_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemCreatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemCreatedEvent, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemRemovedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemRemovedEvent, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemContentUpdatedEvent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::grpc_services::storage::ItemContentUpdatedEvent, item_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::grpc_services::storage::Hashes)},
  { 9, -1, sizeof(::grpc_services::storage::FolderFacet)},
  { 15, -1, sizeof(::grpc_services::storage::FileFacet)},
  { 23, -1, sizeof(::grpc_services::storage::AudioFacet)},
  { 31, -1, sizeof(::grpc_services::storage::Drive)},
  { 42, -1, sizeof(::grpc_services::storage::Item)},
  { 57, -1, sizeof(::grpc_services::storage::ItemCreatedEvent)},
  { 63, -1, sizeof(::grpc_services::storage::ItemRemovedEvent)},
  { 69, -1, sizeof(::grpc_services::storage::ItemContentUpdatedEvent)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_Hashes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_FolderFacet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_FileFacet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_AudioFacet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_Drive_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_ItemCreatedEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_ItemRemovedEvent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::grpc_services::storage::_ItemContentUpdatedEvent_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "storage/entities.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026storage/entities.proto\022\025grpc_services."
      "storage\032\026common/Timestamp.proto\"B\n\006Hashe"
      "s\022\r\n\005crc32\030\001 \001(\t\022\014\n\004sha1\030\002 \001(\t\022\013\n\003md5\030\003 "
      "\001(\t\022\016\n\006sha512\030\004 \001(\t\" \n\013FolderFacet\022\021\n\tnu"
      "m_items\030\001 \001(\004\"\177\n\tFileFacet\022-\n\006hashes\030\001 \001"
      "(\0132\035.grpc_services.storage.Hashes\022\021\n\tmim"
      "e_type\030\002 \001(\t\0220\n\005audio\030\003 \001(\0132!.grpc_servi"
      "ces.storage.AudioFacet\"\?\n\nAudioFacet\022\017\n\007"
      "bitrate\030\001 \001(\004\022\020\n\010duration\030\002 \001(\004\022\016\n\006is_vb"
      "r\030\003 \001(\010\"\342\001\n\005Drive\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 "
      "\001(\t\022\023\n\013description\030\003 \001(\t\0225\n\014created_time"
      "\030\004 \001(\0132\037.grpc_services.common.Timestamp\022"
      "6\n\rlast_modified\030\005 \001(\0132\037.grpc_services.c"
      "ommon.Timestamp\022;\n\022last_item_modified\030\006 "
      "\001(\0132\037.grpc_services.common.Timestamp\"\272\002\n"
      "\004Item\022\n\n\002id\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013descr"
      "iption\030\003 \001(\t\0225\n\014created_time\030\004 \001(\0132\037.grp"
      "c_services.common.Timestamp\0226\n\rlast_modi"
      "fied\030\005 \001(\0132\037.grpc_services.common.Timest"
      "amp\022\021\n\tparent_id\030\006 \001(\t\022\014\n\004size\030\007 \001(\004\0220\n\004"
      "file\030\010 \001(\0132 .grpc_services.storage.FileF"
      "acetH\000\0224\n\006folder\030\t \001(\0132\".grpc_services.s"
      "torage.FolderFacetH\000B\013\n\ttest_type\"=\n\020Ite"
      "mCreatedEvent\022)\n\004item\030\001 \001(\0132\033.grpc_servi"
      "ces.storage.Item\"=\n\020ItemRemovedEvent\022)\n\004"
      "item\030\001 \001(\0132\033.grpc_services.storage.Item\""
      "D\n\027ItemContentUpdatedEvent\022)\n\004item\030\001 \001(\013"
      "2\033.grpc_services.storage.Itemb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1117);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "storage/entities.proto", &protobuf_RegisterTypes);
  ::protobuf_common_2fTimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_storage_2fentities_2eproto
namespace grpc_services {
namespace storage {

// ===================================================================

void Hashes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Hashes::kCrc32FieldNumber;
const int Hashes::kSha1FieldNumber;
const int Hashes::kMd5FieldNumber;
const int Hashes::kSha512FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Hashes::Hashes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsHashes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.Hashes)
}
Hashes::Hashes(const Hashes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crc32_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.crc32().size() > 0) {
    crc32_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crc32_);
  }
  sha1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sha1().size() > 0) {
    sha1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha1_);
  }
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.md5().size() > 0) {
    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sha512().size() > 0) {
    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Hashes)
}

void Hashes::SharedCtor() {
  crc32_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Hashes::~Hashes() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Hashes)
  SharedDtor();
}

void Hashes::SharedDtor() {
  crc32_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Hashes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Hashes::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Hashes& Hashes::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsHashes();
  return *internal_default_instance();
}

Hashes* Hashes::New(::google::protobuf::Arena* arena) const {
  Hashes* n = new Hashes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Hashes::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Hashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  crc32_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Hashes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.Hashes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string crc32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_crc32()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->crc32().data(), static_cast<int>(this->crc32().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Hashes.crc32"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sha1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sha1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sha1().data(), static_cast<int>(this->sha1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Hashes.sha1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string md5 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_md5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->md5().data(), static_cast<int>(this->md5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Hashes.md5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sha512 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sha512().data(), static_cast<int>(this->sha512().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Hashes.sha512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.Hashes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.Hashes)
  return false;
#undef DO_
}

void Hashes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.Hashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crc32 = 1;
  if (this->crc32().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crc32().data(), static_cast<int>(this->crc32().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.crc32");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->crc32(), output);
  }

  // string sha1 = 2;
  if (this->sha1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha1().data(), static_cast<int>(this->sha1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sha1(), output);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.md5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->md5(), output);
  }

  // string sha512 = 4;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), static_cast<int>(this->sha512().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sha512(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.Hashes)
}

::google::protobuf::uint8* Hashes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Hashes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string crc32 = 1;
  if (this->crc32().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->crc32().data(), static_cast<int>(this->crc32().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.crc32");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->crc32(), target);
  }

  // string sha1 = 2;
  if (this->sha1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha1().data(), static_cast<int>(this->sha1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sha1(), target);
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->md5().data(), static_cast<int>(this->md5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.md5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->md5(), target);
  }

  // string sha512 = 4;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), static_cast<int>(this->sha512().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Hashes.sha512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sha512(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Hashes)
  return target;
}

size_t Hashes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Hashes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string crc32 = 1;
  if (this->crc32().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->crc32());
  }

  // string sha1 = 2;
  if (this->sha1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sha1());
  }

  // string md5 = 3;
  if (this->md5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->md5());
  }

  // string sha512 = 4;
  if (this->sha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sha512());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Hashes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.Hashes)
  GOOGLE_DCHECK_NE(&from, this);
  const Hashes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Hashes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.Hashes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.Hashes)
    MergeFrom(*source);
  }
}

void Hashes::MergeFrom(const Hashes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Hashes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.crc32().size() > 0) {

    crc32_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crc32_);
  }
  if (from.sha1().size() > 0) {

    sha1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha1_);
  }
  if (from.md5().size() > 0) {

    md5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.md5_);
  }
  if (from.sha512().size() > 0) {

    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
}

void Hashes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.Hashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Hashes::CopyFrom(const Hashes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Hashes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Hashes::IsInitialized() const {
  return true;
}

void Hashes::Swap(Hashes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Hashes::InternalSwap(Hashes* other) {
  using std::swap;
  crc32_.Swap(&other->crc32_);
  sha1_.Swap(&other->sha1_);
  md5_.Swap(&other->md5_);
  sha512_.Swap(&other->sha512_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Hashes::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FolderFacet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FolderFacet::kNumItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FolderFacet::FolderFacet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsFolderFacet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.FolderFacet)
}
FolderFacet::FolderFacet(const FolderFacet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_items_ = from.num_items_;
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.FolderFacet)
}

void FolderFacet::SharedCtor() {
  num_items_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

FolderFacet::~FolderFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.FolderFacet)
  SharedDtor();
}

void FolderFacet::SharedDtor() {
}

void FolderFacet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FolderFacet::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FolderFacet& FolderFacet::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsFolderFacet();
  return *internal_default_instance();
}

FolderFacet* FolderFacet::New(::google::protobuf::Arena* arena) const {
  FolderFacet* n = new FolderFacet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FolderFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.FolderFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_items_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool FolderFacet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.FolderFacet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 num_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &num_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.FolderFacet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.FolderFacet)
  return false;
#undef DO_
}

void FolderFacet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.FolderFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 num_items = 1;
  if (this->num_items() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->num_items(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.FolderFacet)
}

::google::protobuf::uint8* FolderFacet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.FolderFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 num_items = 1;
  if (this->num_items() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->num_items(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.FolderFacet)
  return target;
}

size_t FolderFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.FolderFacet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 num_items = 1;
  if (this->num_items() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->num_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FolderFacet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.FolderFacet)
  GOOGLE_DCHECK_NE(&from, this);
  const FolderFacet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FolderFacet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.FolderFacet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.FolderFacet)
    MergeFrom(*source);
  }
}

void FolderFacet::MergeFrom(const FolderFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.FolderFacet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num_items() != 0) {
    set_num_items(from.num_items());
  }
}

void FolderFacet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.FolderFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FolderFacet::CopyFrom(const FolderFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.FolderFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FolderFacet::IsInitialized() const {
  return true;
}

void FolderFacet::Swap(FolderFacet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FolderFacet::InternalSwap(FolderFacet* other) {
  using std::swap;
  swap(num_items_, other->num_items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FolderFacet::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FileFacet::InitAsDefaultInstance() {
  ::grpc_services::storage::_FileFacet_default_instance_._instance.get_mutable()->hashes_ = const_cast< ::grpc_services::storage::Hashes*>(
      ::grpc_services::storage::Hashes::internal_default_instance());
  ::grpc_services::storage::_FileFacet_default_instance_._instance.get_mutable()->audio_ = const_cast< ::grpc_services::storage::AudioFacet*>(
      ::grpc_services::storage::AudioFacet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileFacet::kHashesFieldNumber;
const int FileFacet::kMimeTypeFieldNumber;
const int FileFacet::kAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileFacet::FileFacet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsFileFacet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.FileFacet)
}
FileFacet::FileFacet(const FileFacet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_hashes()) {
    hashes_ = new ::grpc_services::storage::Hashes(*from.hashes_);
  } else {
    hashes_ = NULL;
  }
  if (from.has_audio()) {
    audio_ = new ::grpc_services::storage::AudioFacet(*from.audio_);
  } else {
    audio_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.FileFacet)
}

void FileFacet::SharedCtor() {
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hashes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audio_) -
      reinterpret_cast<char*>(&hashes_)) + sizeof(audio_));
  _cached_size_ = 0;
}

FileFacet::~FileFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.FileFacet)
  SharedDtor();
}

void FileFacet::SharedDtor() {
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete hashes_;
  if (this != internal_default_instance()) delete audio_;
}

void FileFacet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileFacet::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FileFacet& FileFacet::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsFileFacet();
  return *internal_default_instance();
}

FileFacet* FileFacet::New(::google::protobuf::Arena* arena) const {
  FileFacet* n = new FileFacet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.FileFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && hashes_ != NULL) {
    delete hashes_;
  }
  hashes_ = NULL;
  if (GetArenaNoVirtual() == NULL && audio_ != NULL) {
    delete audio_;
  }
  audio_ = NULL;
  _internal_metadata_.Clear();
}

bool FileFacet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.FileFacet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Hashes hashes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hashes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.FileFacet.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.storage.AudioFacet audio = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.FileFacet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.FileFacet)
  return false;
#undef DO_
}

void FileFacet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.FileFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Hashes hashes = 1;
  if (this->has_hashes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->hashes_, output);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.FileFacet.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mime_type(), output);
  }

  // .grpc_services.storage.AudioFacet audio = 3;
  if (this->has_audio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->audio_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.FileFacet)
}

::google::protobuf::uint8* FileFacet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.FileFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Hashes hashes = 1;
  if (this->has_hashes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->hashes_, deterministic, target);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.FileFacet.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mime_type(), target);
  }

  // .grpc_services.storage.AudioFacet audio = 3;
  if (this->has_audio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->audio_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.FileFacet)
  return target;
}

size_t FileFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.FileFacet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .grpc_services.storage.Hashes hashes = 1;
  if (this->has_hashes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hashes_);
  }

  // .grpc_services.storage.AudioFacet audio = 3;
  if (this->has_audio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->audio_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileFacet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.FileFacet)
  GOOGLE_DCHECK_NE(&from, this);
  const FileFacet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileFacet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.FileFacet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.FileFacet)
    MergeFrom(*source);
  }
}

void FileFacet::MergeFrom(const FileFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.FileFacet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_hashes()) {
    mutable_hashes()->::grpc_services::storage::Hashes::MergeFrom(from.hashes());
  }
  if (from.has_audio()) {
    mutable_audio()->::grpc_services::storage::AudioFacet::MergeFrom(from.audio());
  }
}

void FileFacet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.FileFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileFacet::CopyFrom(const FileFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.FileFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileFacet::IsInitialized() const {
  return true;
}

void FileFacet::Swap(FileFacet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileFacet::InternalSwap(FileFacet* other) {
  using std::swap;
  mime_type_.Swap(&other->mime_type_);
  swap(hashes_, other->hashes_);
  swap(audio_, other->audio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileFacet::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioFacet::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioFacet::kBitrateFieldNumber;
const int AudioFacet::kDurationFieldNumber;
const int AudioFacet::kIsVbrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioFacet::AudioFacet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsAudioFacet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.AudioFacet)
}
AudioFacet::AudioFacet(const AudioFacet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&bitrate_, &from.bitrate_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_vbr_) -
    reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.AudioFacet)
}

void AudioFacet::SharedCtor() {
  ::memset(&bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_vbr_) -
      reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
  _cached_size_ = 0;
}

AudioFacet::~AudioFacet() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.AudioFacet)
  SharedDtor();
}

void AudioFacet::SharedDtor() {
}

void AudioFacet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AudioFacet::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioFacet& AudioFacet::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsAudioFacet();
  return *internal_default_instance();
}

AudioFacet* AudioFacet::New(::google::protobuf::Arena* arena) const {
  AudioFacet* n = new AudioFacet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AudioFacet::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.AudioFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&bitrate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_vbr_) -
      reinterpret_cast<char*>(&bitrate_)) + sizeof(is_vbr_));
  _internal_metadata_.Clear();
}

bool AudioFacet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.AudioFacet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 bitrate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bitrate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_vbr = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_vbr_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.AudioFacet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.AudioFacet)
  return false;
#undef DO_
}

void AudioFacet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.AudioFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 bitrate = 1;
  if (this->bitrate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->bitrate(), output);
  }

  // uint64 duration = 2;
  if (this->duration() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->duration(), output);
  }

  // bool is_vbr = 3;
  if (this->is_vbr() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_vbr(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.AudioFacet)
}

::google::protobuf::uint8* AudioFacet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.AudioFacet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 bitrate = 1;
  if (this->bitrate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->bitrate(), target);
  }

  // uint64 duration = 2;
  if (this->duration() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->duration(), target);
  }

  // bool is_vbr = 3;
  if (this->is_vbr() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_vbr(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.AudioFacet)
  return target;
}

size_t AudioFacet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.AudioFacet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 bitrate = 1;
  if (this->bitrate() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bitrate());
  }

  // uint64 duration = 2;
  if (this->duration() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->duration());
  }

  // bool is_vbr = 3;
  if (this->is_vbr() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AudioFacet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.AudioFacet)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioFacet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioFacet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.AudioFacet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.AudioFacet)
    MergeFrom(*source);
  }
}

void AudioFacet::MergeFrom(const AudioFacet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.AudioFacet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bitrate() != 0) {
    set_bitrate(from.bitrate());
  }
  if (from.duration() != 0) {
    set_duration(from.duration());
  }
  if (from.is_vbr() != 0) {
    set_is_vbr(from.is_vbr());
  }
}

void AudioFacet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.AudioFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioFacet::CopyFrom(const AudioFacet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.AudioFacet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioFacet::IsInitialized() const {
  return true;
}

void AudioFacet::Swap(AudioFacet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioFacet::InternalSwap(AudioFacet* other) {
  using std::swap;
  swap(bitrate_, other->bitrate_);
  swap(duration_, other->duration_);
  swap(is_vbr_, other->is_vbr_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AudioFacet::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Drive::InitAsDefaultInstance() {
  ::grpc_services::storage::_Drive_default_instance_._instance.get_mutable()->created_time_ = const_cast< ::grpc_services::common::Timestamp*>(
      ::grpc_services::common::Timestamp::internal_default_instance());
  ::grpc_services::storage::_Drive_default_instance_._instance.get_mutable()->last_modified_ = const_cast< ::grpc_services::common::Timestamp*>(
      ::grpc_services::common::Timestamp::internal_default_instance());
  ::grpc_services::storage::_Drive_default_instance_._instance.get_mutable()->last_item_modified_ = const_cast< ::grpc_services::common::Timestamp*>(
      ::grpc_services::common::Timestamp::internal_default_instance());
}
void Drive::clear_created_time() {
  if (GetArenaNoVirtual() == NULL && created_time_ != NULL) {
    delete created_time_;
  }
  created_time_ = NULL;
}
void Drive::clear_last_modified() {
  if (GetArenaNoVirtual() == NULL && last_modified_ != NULL) {
    delete last_modified_;
  }
  last_modified_ = NULL;
}
void Drive::clear_last_item_modified() {
  if (GetArenaNoVirtual() == NULL && last_item_modified_ != NULL) {
    delete last_item_modified_;
  }
  last_item_modified_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Drive::kIdFieldNumber;
const int Drive::kNameFieldNumber;
const int Drive::kDescriptionFieldNumber;
const int Drive::kCreatedTimeFieldNumber;
const int Drive::kLastModifiedFieldNumber;
const int Drive::kLastItemModifiedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Drive::Drive()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.Drive)
}
Drive::Drive(const Drive& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_created_time()) {
    created_time_ = new ::grpc_services::common::Timestamp(*from.created_time_);
  } else {
    created_time_ = NULL;
  }
  if (from.has_last_modified()) {
    last_modified_ = new ::grpc_services::common::Timestamp(*from.last_modified_);
  } else {
    last_modified_ = NULL;
  }
  if (from.has_last_item_modified()) {
    last_item_modified_ = new ::grpc_services::common::Timestamp(*from.last_item_modified_);
  } else {
    last_item_modified_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Drive)
}

void Drive::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&last_item_modified_) -
      reinterpret_cast<char*>(&created_time_)) + sizeof(last_item_modified_));
  _cached_size_ = 0;
}

Drive::~Drive() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Drive)
  SharedDtor();
}

void Drive::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_time_;
  if (this != internal_default_instance()) delete last_modified_;
  if (this != internal_default_instance()) delete last_item_modified_;
}

void Drive::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Drive::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Drive& Drive::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsDrive();
  return *internal_default_instance();
}

Drive* Drive::New(::google::protobuf::Arena* arena) const {
  Drive* n = new Drive;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Drive::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && created_time_ != NULL) {
    delete created_time_;
  }
  created_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_modified_ != NULL) {
    delete last_modified_;
  }
  last_modified_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_item_modified_ != NULL) {
    delete last_item_modified_;
  }
  last_item_modified_ = NULL;
  _internal_metadata_.Clear();
}

bool Drive::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.Drive)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Drive.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Drive.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Drive.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.common.Timestamp created_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.common.Timestamp last_modified = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_modified()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.common.Timestamp last_item_modified = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_item_modified()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.Drive)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.Drive)
  return false;
#undef DO_
}

void Drive::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->created_time_, output);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->last_modified_, output);
  }

  // .grpc_services.common.Timestamp last_item_modified = 6;
  if (this->has_last_item_modified()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->last_item_modified_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.Drive)
}

::google::protobuf::uint8* Drive::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Drive)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Drive.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->created_time_, deterministic, target);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->last_modified_, deterministic, target);
  }

  // .grpc_services.common.Timestamp last_item_modified = 6;
  if (this->has_last_item_modified()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->last_item_modified_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Drive)
  return target;
}

size_t Drive::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Drive)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->created_time_);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_modified_);
  }

  // .grpc_services.common.Timestamp last_item_modified = 6;
  if (this->has_last_item_modified()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_item_modified_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Drive::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  const Drive* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Drive>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.Drive)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.Drive)
    MergeFrom(*source);
  }
}

void Drive::MergeFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Drive)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_created_time()) {
    mutable_created_time()->::grpc_services::common::Timestamp::MergeFrom(from.created_time());
  }
  if (from.has_last_modified()) {
    mutable_last_modified()->::grpc_services::common::Timestamp::MergeFrom(from.last_modified());
  }
  if (from.has_last_item_modified()) {
    mutable_last_item_modified()->::grpc_services::common::Timestamp::MergeFrom(from.last_item_modified());
  }
}

void Drive::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Drive::CopyFrom(const Drive& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Drive)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Drive::IsInitialized() const {
  return true;
}

void Drive::Swap(Drive* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Drive::InternalSwap(Drive* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  swap(created_time_, other->created_time_);
  swap(last_modified_, other->last_modified_);
  swap(last_item_modified_, other->last_item_modified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Drive::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Item::InitAsDefaultInstance() {
  ::grpc_services::storage::_Item_default_instance_._instance.get_mutable()->created_time_ = const_cast< ::grpc_services::common::Timestamp*>(
      ::grpc_services::common::Timestamp::internal_default_instance());
  ::grpc_services::storage::_Item_default_instance_._instance.get_mutable()->last_modified_ = const_cast< ::grpc_services::common::Timestamp*>(
      ::grpc_services::common::Timestamp::internal_default_instance());
  ::grpc_services::storage::_Item_default_instance_.file_ = const_cast< ::grpc_services::storage::FileFacet*>(
      ::grpc_services::storage::FileFacet::internal_default_instance());
  ::grpc_services::storage::_Item_default_instance_.folder_ = const_cast< ::grpc_services::storage::FolderFacet*>(
      ::grpc_services::storage::FolderFacet::internal_default_instance());
}
void Item::clear_created_time() {
  if (GetArenaNoVirtual() == NULL && created_time_ != NULL) {
    delete created_time_;
  }
  created_time_ = NULL;
}
void Item::clear_last_modified() {
  if (GetArenaNoVirtual() == NULL && last_modified_ != NULL) {
    delete last_modified_;
  }
  last_modified_ = NULL;
}
void Item::set_allocated_file(::grpc_services::storage::FileFacet* file) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_type();
  if (file) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      file = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, file, submessage_arena);
    }
    set_has_file();
    test_type_.file_ = file;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.Item.file)
}
void Item::set_allocated_folder(::grpc_services::storage::FolderFacet* folder) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_type();
  if (folder) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      folder = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, folder, submessage_arena);
    }
    set_has_folder();
    test_type_.folder_ = folder;
  }
  // @@protoc_insertion_point(field_set_allocated:grpc_services.storage.Item.folder)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Item::kIdFieldNumber;
const int Item::kNameFieldNumber;
const int Item::kDescriptionFieldNumber;
const int Item::kCreatedTimeFieldNumber;
const int Item::kLastModifiedFieldNumber;
const int Item::kParentIdFieldNumber;
const int Item::kSizeFieldNumber;
const int Item::kFileFieldNumber;
const int Item::kFolderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Item::Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.Item)
}
Item::Item(const Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_id().size() > 0) {
    parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_id_);
  }
  if (from.has_created_time()) {
    created_time_ = new ::grpc_services::common::Timestamp(*from.created_time_);
  } else {
    created_time_ = NULL;
  }
  if (from.has_last_modified()) {
    last_modified_ = new ::grpc_services::common::Timestamp(*from.last_modified_);
  } else {
    last_modified_ = NULL;
  }
  size_ = from.size_;
  clear_has_test_type();
  switch (from.test_type_case()) {
    case kFile: {
      mutable_file()->::grpc_services::storage::FileFacet::MergeFrom(from.file());
      break;
    }
    case kFolder: {
      mutable_folder()->::grpc_services::storage::FolderFacet::MergeFrom(from.folder());
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.Item)
}

void Item::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&created_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&created_time_)) + sizeof(size_));
  clear_has_test_type();
  _cached_size_ = 0;
}

Item::~Item() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.Item)
  SharedDtor();
}

void Item::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete created_time_;
  if (this != internal_default_instance()) delete last_modified_;
  if (has_test_type()) {
    clear_test_type();
  }
}

void Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Item::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Item& Item::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsItem();
  return *internal_default_instance();
}

Item* Item::New(::google::protobuf::Arena* arena) const {
  Item* n = new Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Item::clear_test_type() {
// @@protoc_insertion_point(one_of_clear_start:grpc_services.storage.Item)
  switch (test_type_case()) {
    case kFile: {
      delete test_type_.file_;
      break;
    }
    case kFolder: {
      delete test_type_.folder_;
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_TYPE_NOT_SET;
}


void Item::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && created_time_ != NULL) {
    delete created_time_;
  }
  created_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_modified_ != NULL) {
    delete last_modified_;
  }
  last_modified_ = NULL;
  size_ = GOOGLE_ULONGLONG(0);
  clear_test_type();
  _internal_metadata_.Clear();
}

bool Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Item.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Item.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Item.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.common.Timestamp created_time = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.common.Timestamp last_modified = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_modified()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_id().data(), static_cast<int>(this->parent_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpc_services.storage.Item.parent_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 size = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.storage.FileFacet file = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .grpc_services.storage.FolderFacet folder = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_folder()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.Item)
  return false;
#undef DO_
}

void Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->created_time_, output);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->last_modified_, output);
  }

  // string parent_id = 6;
  if (this->parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_id().data(), static_cast<int>(this->parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.parent_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->parent_id(), output);
  }

  // uint64 size = 7;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->size(), output);
  }

  // .grpc_services.storage.FileFacet file = 8;
  if (has_file()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *test_type_.file_, output);
  }

  // .grpc_services.storage.FolderFacet folder = 9;
  if (has_folder()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *test_type_.folder_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.Item)
}

::google::protobuf::uint8* Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->created_time_, deterministic, target);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->last_modified_, deterministic, target);
  }

  // string parent_id = 6;
  if (this->parent_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_id().data(), static_cast<int>(this->parent_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpc_services.storage.Item.parent_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->parent_id(), target);
  }

  // uint64 size = 7;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->size(), target);
  }

  // .grpc_services.storage.FileFacet file = 8;
  if (has_file()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *test_type_.file_, deterministic, target);
  }

  // .grpc_services.storage.FolderFacet folder = 9;
  if (has_folder()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *test_type_.folder_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.Item)
  return target;
}

size_t Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string parent_id = 6;
  if (this->parent_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_id());
  }

  // .grpc_services.common.Timestamp created_time = 4;
  if (this->has_created_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->created_time_);
  }

  // .grpc_services.common.Timestamp last_modified = 5;
  if (this->has_last_modified()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_modified_);
  }

  // uint64 size = 7;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->size());
  }

  switch (test_type_case()) {
    // .grpc_services.storage.FileFacet file = 8;
    case kFile: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_type_.file_);
      break;
    }
    // .grpc_services.storage.FolderFacet folder = 9;
    case kFolder: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_type_.folder_);
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.Item)
    MergeFrom(*source);
  }
}

void Item::MergeFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.parent_id().size() > 0) {

    parent_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_id_);
  }
  if (from.has_created_time()) {
    mutable_created_time()->::grpc_services::common::Timestamp::MergeFrom(from.created_time());
  }
  if (from.has_last_modified()) {
    mutable_last_modified()->::grpc_services::common::Timestamp::MergeFrom(from.last_modified());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
  switch (from.test_type_case()) {
    case kFile: {
      mutable_file()->::grpc_services::storage::FileFacet::MergeFrom(from.file());
      break;
    }
    case kFolder: {
      mutable_folder()->::grpc_services::storage::FolderFacet::MergeFrom(from.folder());
      break;
    }
    case TEST_TYPE_NOT_SET: {
      break;
    }
  }
}

void Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Item::CopyFrom(const Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Item::IsInitialized() const {
  return true;
}

void Item::Swap(Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Item::InternalSwap(Item* other) {
  using std::swap;
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  description_.Swap(&other->description_);
  parent_id_.Swap(&other->parent_id_);
  swap(created_time_, other->created_time_);
  swap(last_modified_, other->last_modified_);
  swap(size_, other->size_);
  swap(test_type_, other->test_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Item::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemCreatedEvent::InitAsDefaultInstance() {
  ::grpc_services::storage::_ItemCreatedEvent_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemCreatedEvent::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemCreatedEvent::ItemCreatedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsItemCreatedEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.ItemCreatedEvent)
}
ItemCreatedEvent::ItemCreatedEvent(const ItemCreatedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemCreatedEvent)
}

void ItemCreatedEvent::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

ItemCreatedEvent::~ItemCreatedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemCreatedEvent)
  SharedDtor();
}

void ItemCreatedEvent::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void ItemCreatedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemCreatedEvent::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemCreatedEvent& ItemCreatedEvent::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsItemCreatedEvent();
  return *internal_default_instance();
}

ItemCreatedEvent* ItemCreatedEvent::New(::google::protobuf::Arena* arena) const {
  ItemCreatedEvent* n = new ItemCreatedEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemCreatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemCreatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool ItemCreatedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.ItemCreatedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.ItemCreatedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.ItemCreatedEvent)
  return false;
#undef DO_
}

void ItemCreatedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.ItemCreatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.ItemCreatedEvent)
}

::google::protobuf::uint8* ItemCreatedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemCreatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemCreatedEvent)
  return target;
}

size_t ItemCreatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemCreatedEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemCreatedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.ItemCreatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemCreatedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemCreatedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.ItemCreatedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.ItemCreatedEvent)
    MergeFrom(*source);
  }
}

void ItemCreatedEvent::MergeFrom(const ItemCreatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemCreatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void ItemCreatedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.ItemCreatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemCreatedEvent::CopyFrom(const ItemCreatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemCreatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemCreatedEvent::IsInitialized() const {
  return true;
}

void ItemCreatedEvent::Swap(ItemCreatedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemCreatedEvent::InternalSwap(ItemCreatedEvent* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemCreatedEvent::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemRemovedEvent::InitAsDefaultInstance() {
  ::grpc_services::storage::_ItemRemovedEvent_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemRemovedEvent::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemRemovedEvent::ItemRemovedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsItemRemovedEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.ItemRemovedEvent)
}
ItemRemovedEvent::ItemRemovedEvent(const ItemRemovedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemRemovedEvent)
}

void ItemRemovedEvent::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

ItemRemovedEvent::~ItemRemovedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemRemovedEvent)
  SharedDtor();
}

void ItemRemovedEvent::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void ItemRemovedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemRemovedEvent::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemRemovedEvent& ItemRemovedEvent::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsItemRemovedEvent();
  return *internal_default_instance();
}

ItemRemovedEvent* ItemRemovedEvent::New(::google::protobuf::Arena* arena) const {
  ItemRemovedEvent* n = new ItemRemovedEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemRemovedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemRemovedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool ItemRemovedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.ItemRemovedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.ItemRemovedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.ItemRemovedEvent)
  return false;
#undef DO_
}

void ItemRemovedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.ItemRemovedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.ItemRemovedEvent)
}

::google::protobuf::uint8* ItemRemovedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemRemovedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemRemovedEvent)
  return target;
}

size_t ItemRemovedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemRemovedEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemRemovedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.ItemRemovedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemRemovedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemRemovedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.ItemRemovedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.ItemRemovedEvent)
    MergeFrom(*source);
  }
}

void ItemRemovedEvent::MergeFrom(const ItemRemovedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemRemovedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void ItemRemovedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.ItemRemovedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemRemovedEvent::CopyFrom(const ItemRemovedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemRemovedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRemovedEvent::IsInitialized() const {
  return true;
}

void ItemRemovedEvent::Swap(ItemRemovedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemRemovedEvent::InternalSwap(ItemRemovedEvent* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemRemovedEvent::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemContentUpdatedEvent::InitAsDefaultInstance() {
  ::grpc_services::storage::_ItemContentUpdatedEvent_default_instance_._instance.get_mutable()->item_ = const_cast< ::grpc_services::storage::Item*>(
      ::grpc_services::storage::Item::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemContentUpdatedEvent::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemContentUpdatedEvent::ItemContentUpdatedEvent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_storage_2fentities_2eproto::InitDefaultsItemContentUpdatedEvent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpc_services.storage.ItemContentUpdatedEvent)
}
ItemContentUpdatedEvent::ItemContentUpdatedEvent(const ItemContentUpdatedEvent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::grpc_services::storage::Item(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:grpc_services.storage.ItemContentUpdatedEvent)
}

void ItemContentUpdatedEvent::SharedCtor() {
  item_ = NULL;
  _cached_size_ = 0;
}

ItemContentUpdatedEvent::~ItemContentUpdatedEvent() {
  // @@protoc_insertion_point(destructor:grpc_services.storage.ItemContentUpdatedEvent)
  SharedDtor();
}

void ItemContentUpdatedEvent::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void ItemContentUpdatedEvent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ItemContentUpdatedEvent::descriptor() {
  ::protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemContentUpdatedEvent& ItemContentUpdatedEvent::default_instance() {
  ::protobuf_storage_2fentities_2eproto::InitDefaultsItemContentUpdatedEvent();
  return *internal_default_instance();
}

ItemContentUpdatedEvent* ItemContentUpdatedEvent::New(::google::protobuf::Arena* arena) const {
  ItemContentUpdatedEvent* n = new ItemContentUpdatedEvent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ItemContentUpdatedEvent::Clear() {
// @@protoc_insertion_point(message_clear_start:grpc_services.storage.ItemContentUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool ItemContentUpdatedEvent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpc_services.storage.ItemContentUpdatedEvent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .grpc_services.storage.Item item = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpc_services.storage.ItemContentUpdatedEvent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpc_services.storage.ItemContentUpdatedEvent)
  return false;
#undef DO_
}

void ItemContentUpdatedEvent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpc_services.storage.ItemContentUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:grpc_services.storage.ItemContentUpdatedEvent)
}

::google::protobuf::uint8* ItemContentUpdatedEvent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpc_services.storage.ItemContentUpdatedEvent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:grpc_services.storage.ItemContentUpdatedEvent)
  return target;
}

size_t ItemContentUpdatedEvent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpc_services.storage.ItemContentUpdatedEvent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .grpc_services.storage.Item item = 1;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ItemContentUpdatedEvent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemContentUpdatedEvent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemContentUpdatedEvent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpc_services.storage.ItemContentUpdatedEvent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpc_services.storage.ItemContentUpdatedEvent)
    MergeFrom(*source);
  }
}

void ItemContentUpdatedEvent::MergeFrom(const ItemContentUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::grpc_services::storage::Item::MergeFrom(from.item());
  }
}

void ItemContentUpdatedEvent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemContentUpdatedEvent::CopyFrom(const ItemContentUpdatedEvent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpc_services.storage.ItemContentUpdatedEvent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemContentUpdatedEvent::IsInitialized() const {
  return true;
}

void ItemContentUpdatedEvent::Swap(ItemContentUpdatedEvent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemContentUpdatedEvent::InternalSwap(ItemContentUpdatedEvent* other) {
  using std::swap;
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ItemContentUpdatedEvent::GetMetadata() const {
  protobuf_storage_2fentities_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_storage_2fentities_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace storage
}  // namespace grpc_services

// @@protoc_insertion_point(global_scope)
